components:
  requestBodies:
    FilterModel:
      content:
        application/json; charset=UTF-8:
          schema:
            $ref: '#/components/schemas/FilterModel'
  securitySchemes:
    x-redlock-auth:
      description: The x-redlock-auth value is a JSON Web Token (JWT).
      in: header
      name: x-redlock-auth
      type: apiKey
  schemas:
    AbsoluteTimeRangeConfigModel:
      allOf:
      - $ref: '#/components/schemas/TimeRangeConfigModel'
      - description: Model for AbsoluteTimeRangeConfig
        properties:
          type:
            example: absolute
            type: string
          value:
            allOf:
            - $ref: '#/components/schemas/TimeModel'
            - description: Time range object
        required:
        - value
        type: object
    FilterModel:
      description: Model for Filter
      properties:
        detailed:
          description: Detailed
          type: boolean
        fields:
          description: Array of specific fields to return
          items:
            type: string
          type: array
        filters:
          description: Filtering parameters
          items:
            $ref: '#/components/schemas/UIFilterModel'
          type: array
        groupBy:
          description: For asset or data inventory only. Group returned items by **cloud.type**,
            **cloud.service**, **cloud.region**, **cloud.account**, and/or **resource.type**
          items:
            type: string
          type: array
        limit:
          description: Maximum number of items to return. When data is paginated,
            maximum number of items per page
          type: number
        offset:
          description: The number of items to skip before selecting items to return.
            Default is zero
          type: number
        pageToken:
          description: 'Setting this pagination Token to the **nextPageToken** from
            a response object returns the next page of data '
          type: string
        sortBy:
          description: Array of sort properties. Append **:asc** or  **:desc** to
            the key to sort by ascending or descending order respectively. Example
            sort properties are **id:asc** and **timestamp:desc**
          items:
            type: string
          type: array
        timeRange:
          allOf:
          - $ref: '#/components/schemas/TimeRangeConfigModel'
          - description: Time range
      type: object
    RelativeTimeDurationModel:
      description: Model for RelativeTimeDuration
      properties:
        amount:
          description: Number of time units
          format: int32
          type: integer
        unit:
          description: Time unit
          enum:
          - minute
          - hour
          - day
          - week
          - month
          - year
          type: string
      type: object
    RelativeTimeRangeConfigModel:
      allOf:
      - $ref: '#/components/schemas/TimeRangeConfigModel'
      - description: Model for RelativeTimeRangeConfig
        properties:
          relativeTimeType:
            description: Direction in which to count time. Default = BACKWARD
            enum:
            - BACKWARD
            - FORWARD
            type: string
          type:
            example: relative
            type: string
          value:
            allOf:
            - $ref: '#/components/schemas/RelativeTimeDurationModel'
            - description: Time range object
        required:
        - value
        type: object
    TimeModel:
      description: Model for Time
      properties:
        endTime:
          description: End timestamp
          format: int64
          type: integer
        startTime:
          description: Start timestamp
          format: int64
          type: integer
      type: object
    TimeRangeConfigModel:
      description: 'See the [Time Range Model](/api/cloud/api-time-range-model) for
        details.

        '
      discriminator:
        mapping:
          absolute: '#/components/schemas/AbsoluteTimeRangeConfigModel'
          relative: '#/components/schemas/RelativeTimeRangeConfigModel'
          to_now: '#/components/schemas/ToNowTimeRangeConfigModel'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/RelativeTimeRangeConfigModel'
      - $ref: '#/components/schemas/AbsoluteTimeRangeConfigModel'
      - $ref: '#/components/schemas/ToNowTimeRangeConfigModel'
      properties:
        type:
          description: Time type
          type: string
      required:
      - type
      type: object
    ToNowTimeRangeConfigModel:
      allOf:
      - $ref: '#/components/schemas/TimeRangeConfigModel'
      - description: Model for ToNowTimeRangeConfig
        properties:
          value:
            description: Time range object
            enum:
            - MINUTE
            - HOUR
            - DAY
            - WEEK
            - MONTH
            - YEAR
            - EPOCH
            - LOGIN
            type: string
        type: object
    UIFilterModel:
      description: Model for UIFilter
      properties:
        name:
          description: Name
          type: string
        operator:
          description: Operator
          enum:
          - =
          type: string
        value:
          description: Value
          type: string
      type: object
info:
  contact: {}
  description: "The Compliance API methods provide information related to saved compliance\
    \ filters across tenants. The filters available through the API enable \nyou to\
    \ save, list, fetch, update, and delete compliance filters across tenants.\n"
  title: Prisma Cloud Compliance API Overview
  version: Latest
openapi: 3.0.0
paths:
  /filter/compliance:
    get:
      description: Get a list of all the saved filters for compliance belonging to
        the same tenant.
      operationId: get-all-saved-compliance-filters
      parameters:
      - in: query
        name: target
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json; charset=UTF-8:
              schema:
                items:
                  $ref: '#/components/schemas/FilterModel'
                type: array
          description: successful operation
        '500':
          description: failed_fetch_compliance_saved_filters
      security:
      - x-redlock-auth: []
      summary: List Saved Compliance Filters
      tags:
      - Compliance
    post:
      description: Saves the compliance filter
      operationId: save-compliance-filter
      requestBody:
        $ref: '#/components/requestBodies/FilterModel'
      responses:
        '400':
          description: failed_add_compliance_saved_filter
        '500':
          description: failed_add_compliance_saved_filter
      security:
      - x-redlock-auth: []
      summary: Save Compliance Filter
      tags:
      - Compliance
  /filter/compliance/{id}:
    get:
      description: Fetch the compliance saved filter by id belonging to the tenant.
      operationId: get-saved-compliance-filter
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/FilterModel'
          description: successful operation
        '500':
          description: failed_fetch_compliance_saved_filter
      security:
      - x-redlock-auth: []
      summary: Fetch Saved Compliance Filter
      tags:
      - Compliance
    put:
      description: Update the saved compliance filter
      operationId: update-saved-compliance-filter
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/FilterModel'
      responses:
        '400':
          description: failed_update_compliance_saved_filter
        '500':
          description: failed_update_compliance_saved_filter
      security:
      - x-redlock-auth: []
      summary: Update Saved Compliance Filter
      tags:
      - Compliance
    delete:
      description: Delete the provided saved compliance filter.
      operationId: delete-saved-compliance-filter
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        '400':
          description: failed_add_compliance_saved_filter
        '500':
          description: failed_add_compliance_saved_filter
      security:
      - x-redlock-auth: []
      summary: Delete Saved Compliance Filter
      tags:
      - Compliance
servers:
- url: https://api.prismacloud.io
tags:
- description: The Compliance endpoints are listed below.
  name: Compliance
