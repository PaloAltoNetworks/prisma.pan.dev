{
  "components": {
    "examples": {},
    "headers": {},
    "parameters": {},
    "requestBodies": {},
    "responses": {},
    "securitySchemes": {
      "CustomAuthorizer": {
        "type": "apiKey",
        "name": "authorization",
        "in": "header",
        "description": "The **authorization** value is a JSON Web Token (JWT), which you can get through \n[a CSPM login request](/api/cloud/cspm/login#operation/app-login).\n"
      }
    },
    "schemas": {
      "ErrorType": { "enum": ["violation", "cve"], "type": "string" },
      "ErrorsInFileCount": {
        "properties": {
          "filePath": { "type": "string" },
          "errorsCount": { "type": "number", "format": "double" },
          "openErrorsCount": { "type": "number", "format": "double" },
          "suppressedErrorsCount": { "type": "number", "format": "double" },
          "passedCount": { "type": "number", "format": "double" },
          "fixedCount": { "type": "number", "format": "double" },
          "type": { "$ref": "#/components/schemas/ErrorType" }
        },
        "required": [
          "filePath",
          "errorsCount",
          "openErrorsCount",
          "suppressedErrorsCount",
          "passedCount",
          "fixedCount",
          "type"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "GetErrorsFilesResponseBody": {
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/ErrorsInFileCount" },
            "type": "array"
          }
        },
        "required": ["data"],
        "type": "object",
        "additionalProperties": false
      },
      "SourceType": {
        "type": "string",
        "enum": [
          "Github",
          "Bitbucket",
          "Gitlab",
          "AzureRepos",
          "cli",
          "AWS",
          "Azure",
          "GCP",
          "Docker",
          "githubEnterprise",
          "gitlabEnterprise",
          "bitbucketEnterprise",
          "terraformCloud",
          "githubActions",
          "circleci",
          "codebuild",
          "jenkins",
          "tfcRunTasks"
        ]
      },
      "Severity": {
        "type": "string",
        "enum": ["CRITICAL", "HIGH", "MEDIUM", "LOW"]
      },
      "Category": {
        "type": "string",
        "enum": [
          "IAM",
          "Logging",
          "Monitoring",
          "Networking",
          "Kubernetes",
          "General",
          "Serverless",
          "Elasticsearch",
          "Storage",
          "Secrets",
          "Public",
          "Vulnerabilities",
          "Drift"
        ]
      },
      "Type": {
        "type": "string",
        "enum": ["Errors", "Suppressed", "Passed", "Fixed"]
      },
      "Search": {
        "properties": {
          "text": { "type": "string" },
          "options": {
            "items": { "type": "string", "enum": ["path", "code"] },
            "type": "array"
          },
          "title": {
            "type": "string",
            "enum": ["title", "constructive_title", "descriptive_title"]
          }
        },
        "required": ["text", "options"],
        "type": "object",
        "additionalProperties": false
      },
      "CodeStatus": { "type": "string", "enum": ["hasFix"], "nullable": false },
      "GetErrorsFilters": {
        "properties": {
          "repository": { "type": "string", "description": "Repository name" },
          "branch": {
            "type": "string",
            "description": "Branch name",
            "nullable": true
          },
          "sourceTypes": {
            "items": { "$ref": "#/components/schemas/SourceType" },
            "type": "array"
          },
          "severities": {
            "items": { "$ref": "#/components/schemas/Severity" },
            "type": "array"
          },
          "tags": {
            "items": {
              "properties": {
                "value": { "type": "string" },
                "key": { "type": "string" }
              },
              "required": ["value", "key"],
              "type": "object"
            },
            "type": "array"
          },
          "CICDRunId": {
            "type": "number",
            "format": "double",
            "description": "CICD run ID"
          },
          "categories": {
            "items": { "$ref": "#/components/schemas/Category" },
            "type": "array"
          },
          "types": {
            "items": { "$ref": "#/components/schemas/Type" },
            "type": "array"
          },
          "search": { "$ref": "#/components/schemas/Search" },
          "authors": {
            "items": { "type": "string" },
            "type": "array",
            "description": "Array of code authors"
          },
          "codeStatus": {
            "items": { "$ref": "#/components/schemas/CodeStatus" },
            "type": "array"
          }
        },
        "required": ["repository", "sourceTypes"],
        "type": "object",
        "additionalProperties": false
      },
      "CVE": {
        "properties": {
          "cveId": { "type": "string" },
          "status": { "type": "string" },
          "cvss": { "type": "number", "format": "double" },
          "vector": { "type": "string" },
          "description": { "type": "string" },
          "severity": { "type": "string" },
          "packageName": { "type": "string" },
          "packageVersion": { "type": "string" },
          "riskFactors": { "type": "string" },
          "link": { "type": "string" },
          "publishedDate": { "type": "string", "format": "date-time" }
        },
        "required": [
          "cveId",
          "status",
          "cvss",
          "vector",
          "description",
          "severity",
          "packageName",
          "packageVersion",
          "riskFactors",
          "link",
          "publishedDate"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "VariableRenderingError": {
        "properties": {
          "path": { "type": "string" },
          "lines": {
            "items": { "type": "number", "format": "double" },
            "type": "array"
          },
          "code": { "type": "string" },
          "fixedCode": { "type": "string" }
        },
        "required": ["path", "lines", "code", "fixedCode"],
        "type": "object",
        "additionalProperties": false
      },
      "moduleReferences": {
        "properties": {
          "name": { "type": "string" },
          "path": { "type": "string" },
          "displayPath": { "type": "string" },
          "lines": {
            "items": { "type": "number", "format": "double" },
            "type": "array"
          },
          "code": { "type": "string" }
        },
        "required": ["name", "path", "displayPath", "lines", "code"],
        "type": "object",
        "additionalProperties": false
      },
      "moduleError": {
        "properties": {
          "moduleReferences": {
            "items": { "$ref": "#/components/schemas/moduleReferences" },
            "type": "array"
          },
          "moduleFile": { "type": "string" },
          "fixedCode": { "type": "string" },
          "code": { "type": "string" }
        },
        "required": ["moduleReferences", "moduleFile", "fixedCode", "code"],
        "type": "object",
        "additionalProperties": false
      },
      "SmartFix": {
        "properties": {
          "id": { "type": "string" },
          "code": { "type": "string" },
          "times": { "type": "number", "format": "double" },
          "percent": { "type": "number", "format": "double" },
          "inspectedKey": { "type": "string" },
          "fixedCode": { "type": "string" }
        },
        "required": ["id", "times", "percent", "inspectedKey"],
        "type": "object",
        "additionalProperties": false
      },
      "ViolationError": {
        "properties": {
          "cves": {
            "items": { "$ref": "#/components/schemas/CVE" },
            "type": "array"
          },
          "resourceCode": { "type": "string" },
          "filePath": { "type": "string" },
          "resourceId": { "type": "string" },
          "resourceType": { "type": "string" },
          "errorId": { "type": "string" },
          "fixedCode": { "type": "string" },
          "status": { "type": "string" },
          "scannerType": { "type": "string" },
          "metadataChecksMetadataPath": { "type": "string" },
          "frameworkType": {
            "type": "string",
            "description": "Valid values are **terraform**, **cloudformation**"
          },
          "errorLines": {
            "items": { "type": "number", "format": "double" },
            "type": "array"
          },
          "fixPath": { "type": "string" },
          "lines": {
            "items": { "type": "number", "format": "double" },
            "type": "array"
          },
          "author": { "type": "string" },
          "commitHash": { "type": "string" },
          "date": { "type": "string", "format": "date-time" },
          "variableRendering": {
            "$ref": "#/components/schemas/VariableRenderingError"
          },
          "module": { "$ref": "#/components/schemas/moduleError" },
          "runtimeId": { "type": "string" },
          "runtimeSourceId": { "type": "string" },
          "fixes": {
            "items": { "$ref": "#/components/schemas/SmartFix" },
            "type": "array"
          },
          "selectedFix": {
            "allOf": [{ "$ref": "#/components/schemas/SmartFix" }],
            "nullable": true
          },
          "createdBy": { "type": "string" },
          "runtimeFrameworkType": { "type": "string" }
        },
        "required": [
          "resourceCode",
          "filePath",
          "resourceId",
          "resourceType",
          "errorId",
          "fixedCode",
          "status",
          "scannerType",
          "metadataChecksMetadataPath",
          "frameworkType",
          "errorLines",
          "fixPath",
          "lines",
          "author",
          "commitHash",
          "date",
          "variableRendering",
          "module",
          "runtimeId",
          "runtimeSourceId",
          "fixes"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "ErrorsInFileWithPaginationResponse": {
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/ViolationError" },
            "type": "array"
          },
          "hasNext": { "type": "boolean" }
        },
        "required": ["data", "hasNext"],
        "type": "object",
        "additionalProperties": false
      },
      "GetErrorsInFileWithFilters": {
        "properties": {
          "repository": { "type": "string", "description": "Repository name" },
          "branch": {
            "type": "string",
            "nullable": true,
            "description": "Branch name"
          },
          "sourceTypes": {
            "items": { "$ref": "#/components/schemas/SourceType" },
            "type": "array"
          },
          "severities": {
            "items": { "$ref": "#/components/schemas/Severity" },
            "type": "array"
          },
          "tags": {
            "items": {
              "properties": {
                "value": { "type": "string" },
                "key": { "type": "string" }
              },
              "required": ["value", "key"],
              "type": "object"
            },
            "type": "array"
          },
          "CICDRunId": {
            "type": "number",
            "format": "double",
            "description": "CICD run ID"
          },
          "categories": {
            "items": { "$ref": "#/components/schemas/Category" },
            "type": "array"
          },
          "types": {
            "items": { "$ref": "#/components/schemas/Type" },
            "type": "array"
          },
          "search": { "$ref": "#/components/schemas/Search" },
          "authors": {
            "items": { "type": "string" },
            "type": "array",
            "description": "Array of code authors"
          },
          "codeStatus": {
            "items": { "$ref": "#/components/schemas/CodeStatus" },
            "type": "array"
          },
          "filePath": { "type": "string", "description": "File path" }
        },
        "required": ["repository", "sourceTypes", "filePath"],
        "type": "object",
        "additionalProperties": false
      },
      "SubmitResponse": {
        "properties": {
          "message": { "type": "string" },
          "remediationsResponse": {
            "items": { "type": "string" },
            "type": "array"
          }
        },
        "required": ["message"],
        "type": "object",
        "additionalProperties": false
      },
      "SubmitActionsResponse": {
        "properties": {
          "data": { "$ref": "#/components/schemas/SubmitResponse" }
        },
        "required": ["data"],
        "type": "object",
        "additionalProperties": false
      },
      "SubmitActionsType": { "enum": ["default", "pr"], "type": "string" },
      "SubmitActionsMetadata": {
        "properties": {
          "owner": { "type": "string", "description": "Repostory owner" },
          "repoName": { "type": "string", "description": "Repostory name" },
          "pr": { "type": "string", "description": "Pull request number (PR)" },
          "runNumber": {
            "type": "number",
            "format": "double",
            "description": "Run number"
          },
          "sourceBranchName": {
            "type": "string",
            "description": "Source branch name"
          }
        },
        "required": ["owner", "repoName", "runNumber"],
        "type": "object",
        "additionalProperties": false
      },
      "Justification": {
        "properties": {
          "comment": { "type": "string" },
          "createdBy": { "type": "string" },
          "expirationTime": { "type": "number", "format": "double" }
        },
        "required": ["comment", "createdBy"],
        "type": "object",
        "additionalProperties": false
      },
      "CICDViolation": {
        "properties": {
          "metadataChecksMetadataPath": { "type": "string" },
          "metadataLines": {
            "items": { "type": "number", "format": "double" },
            "type": "array"
          },
          "violationId": { "type": "string" },
          "resourceId": { "type": "string" },
          "frameworkType": {
            "type": "string",
            "description": "Valid values are **terraform**, **cloudformation**"
          },
          "s3FilePath": { "type": "string" },
          "CICDRunId": { "type": "number", "format": "double" },
          "justificationId": { "type": "string", "nullable": true },
          "status": { "type": "string" },
          "repository": { "type": "string" },
          "s3FixFilePath": { "type": "string", "nullable": true },
          "creationDate": { "type": "string" },
          "updatedDate": { "type": "string" },
          "commentIds": { "items": { "type": "string" }, "type": "array" },
          "vcsCommentLine": { "type": "string", "nullable": true },
          "errorLines": {
            "items": { "type": "number", "format": "double" },
            "type": "array"
          },
          "severity": { "type": "string" },
          "justification": { "$ref": "#/components/schemas/Justification" },
          "bulkSuppression": { "type": "boolean" },
          "runtimeId": { "type": "string", "nullable": true },
          "runtimeSourceId": { "type": "string", "nullable": true }
        },
        "required": [
          "metadataChecksMetadataPath",
          "metadataLines",
          "violationId",
          "resourceId",
          "frameworkType",
          "s3FilePath",
          "CICDRunId",
          "justificationId",
          "status",
          "repository",
          "s3FixFilePath",
          "creationDate",
          "updatedDate",
          "commentIds",
          "vcsCommentLine",
          "errorLines",
          "severity"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "DefaultBranchViolationToFix": {
        "properties": {
          "metadataChecksMetadataPath": { "type": "string" },
          "metadataLines": {
            "items": { "type": "number", "format": "double" },
            "type": "array"
          },
          "violationId": { "type": "string" },
          "resourceId": { "type": "string" },
          "frameworkType": {
            "type": "string",
            "description": "Valid values are **terraform**, **cloudformation**"
          },
          "s3FilePath": { "type": "string" },
          "owner": { "type": "string" },
          "repoName": { "type": "string" },
          "fullId": { "type": "string" },
          "fixPath": { "type": "string" },
          "errorLines": {
            "items": { "type": "number", "format": "double" },
            "type": "array"
          },
          "runtimeId": { "type": "string", "nullable": true },
          "runtimeSourceId": { "type": "string", "nullable": true },
          "fixedCode": { "type": "string", "nullable": true },
          "selectedFix": { "type": "string", "nullable": true },
          "inspectedKey": { "type": "string", "nullable": true },
          "fixes": {
            "items": { "$ref": "#/components/schemas/SmartFix" },
            "type": "array"
          },
          "resourceCode": { "type": "string", "nullable": true }
        },
        "required": [
          "metadataChecksMetadataPath",
          "metadataLines",
          "violationId",
          "resourceId",
          "frameworkType",
          "s3FilePath",
          "owner",
          "repoName",
          "fullId",
          "fixedCode"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "ResourceToSuppress": {
        "properties": {
          "id": { "type": "string" },
          "accountId": { "type": "string" }
        },
        "required": ["id", "accountId"],
        "type": "object",
        "additionalProperties": false
      },
      "ResourceViolationToSuppress": {
        "properties": {
          "violationId": { "type": "string" },
          "suppressionType": { "type": "string" },
          "comment": { "type": "string" },
          "expirationTime": { "type": "number", "format": "double" },
          "resources": {
            "items": { "$ref": "#/components/schemas/ResourceToSuppress" },
            "type": "array"
          }
        },
        "required": ["violationId", "suppressionType", "comment", "resources"],
        "type": "object",
        "additionalProperties": false
      },
      "TagsViolationToSuppress": {
        "properties": {
          "violationId": { "type": "string" },
          "suppressionType": { "type": "string" },
          "comment": { "type": "string" },
          "expirationTime": { "type": "number", "format": "double" },
          "tags": {
            "items": {
              "properties": {
                "value": { "type": "string" },
                "key": { "type": "string" }
              },
              "required": ["value", "key"],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": ["violationId", "suppressionType", "comment", "tags"],
        "type": "object",
        "additionalProperties": false
      },
      "SourcesViolationToSuppress": {
        "properties": {
          "violationId": { "type": "string" },
          "suppressionType": { "type": "string" },
          "comment": { "type": "string" },
          "expirationTime": { "type": "number", "format": "double" },
          "accountIds": { "items": { "type": "string" }, "type": "array" }
        },
        "required": ["violationId", "suppressionType", "comment", "accountIds"],
        "type": "object",
        "additionalProperties": false
      },
      "BaseViolationToSuppress": {
        "properties": {
          "violationId": { "type": "string" },
          "suppressionType": { "type": "string" },
          "comment": { "type": "string" },
          "expirationTime": { "type": "number", "format": "double" }
        },
        "required": ["violationId", "suppressionType", "comment"],
        "type": "object",
        "additionalProperties": false
      },
      "SubmitActionsRequest": {
        "properties": {
          "type": { "$ref": "#/components/schemas/SubmitActionsType" },
          "metadata": { "$ref": "#/components/schemas/SubmitActionsMetadata" },
          "violationsToFix": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/CICDViolation" },
                "type": "array"
              },
              {
                "items": {
                  "$ref": "#/components/schemas/DefaultBranchViolationToFix"
                },
                "type": "array"
              }
            ]
          },
          "violationsToSuppress": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/CICDViolation" },
                "type": "array"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ResourceViolationToSuppress"
                    },
                    { "$ref": "#/components/schemas/TagsViolationToSuppress" },
                    {
                      "$ref": "#/components/schemas/SourcesViolationToSuppress"
                    },
                    { "$ref": "#/components/schemas/BaseViolationToSuppress" }
                  ]
                },
                "type": "array"
              }
            ]
          }
        },
        "required": ["type", "violationsToFix", "violationsToSuppress"],
        "type": "object",
        "additionalProperties": false
      },
      "ErrorsReturn": {
        "properties": {
          "errors": { "items": { "type": "string" }, "type": "array" }
        },
        "required": ["errors"],
        "type": "object",
        "additionalProperties": false
      },
      "CategoryType": {
        "type": "string",
        "enum": [
          "elasticsearch",
          "general",
          "iam",
          "logging",
          "monitoring",
          "networking",
          "public",
          "secrets",
          "serverless",
          "storage"
        ]
      },
      "SeverityType": {
        "type": "string",
        "enum": ["critical", "high", "medium", "low"]
      },
      "MetadataPolicy": {
        "properties": {
          "name": { "type": "string" },
          "guidelines": {
            "type": "string",
            "description": "Text that describe guidelines"
          },
          "category": { "$ref": "#/components/schemas/CategoryType" },
          "severity": { "$ref": "#/components/schemas/SeverityType" }
        },
        "required": ["name", "guidelines", "category", "severity"],
        "type": "object",
        "additionalProperties": false
      },
      "ProviderType": { "type": "string", "enum": ["aws", "gcp", "azure"] },
      "ScopePolicy": {
        "properties": {
          "provider": { "$ref": "#/components/schemas/ProviderType" }
        },
        "required": ["provider"],
        "type": "object",
        "additionalProperties": false
      },
      "AwsResourceTypes": {
        "type": "string",
        "enum": [
          "aws",
          "aws_root",
          "aws_root_access_key",
          "aws_acm_certificate",
          "aws_acm_certificate_validation",
          "aws_acmpca_certificate_authority",
          "aws_api_gateway_account",
          "aws_api_gateway_api_key",
          "aws_api_gateway_authorizer",
          "aws_api_gateway_base_path_mapping",
          "aws_api_gateway_client_certificate",
          "aws_api_gateway_deployment",
          "aws_api_gateway_documentation_part",
          "aws_api_gateway_documentation_version",
          "aws_api_gateway_domain_name",
          "aws_api_gateway_gateway_response",
          "aws_api_gateway_integration",
          "aws_api_gateway_integration_response",
          "aws_api_gateway_method",
          "aws_api_gateway_method_response",
          "aws_api_gateway_method_settings",
          "aws_api_gateway_model",
          "aws_api_gateway_request_validator",
          "aws_api_gateway_resource",
          "aws_api_gateway_rest_api",
          "aws_api_gateway_stage",
          "aws_api_gateway_usage_plan",
          "aws_api_gateway_usage_plan_key",
          "aws_api_gateway_vpc_link",
          "aws_apigatewayv2_api",
          "aws_apigatewayv2_api_mapping",
          "aws_apigatewayv2_authorizer",
          "aws_apigatewayv2_deployment",
          "aws_apigatewayv2_domain_name",
          "aws_apigatewayv2_integration",
          "aws_apigatewayv2_integration_response",
          "aws_apigatewayv2_model",
          "aws_apigatewayv2_route",
          "aws_apigatewayv2_route_response",
          "aws_apigatewayv2_stage",
          "aws_apigatewayv2_vpc_link",
          "aws_accessanalyzer_analyzer",
          "aws_appmesh_mesh",
          "aws_appmesh_route",
          "aws_appmesh_virtual_node",
          "aws_appmesh_virtual_router",
          "aws_appmesh_virtual_service",
          "aws_appsync_api_key",
          "aws_appsync_datasource",
          "aws_appsync_function",
          "aws_appsync_graphql_api",
          "aws_appsync_resolver",
          "aws_appautoscaling_policy",
          "aws_appautoscaling_scheduled_action",
          "aws_appautoscaling_target",
          "aws_athena_database",
          "aws_athena_named_query",
          "aws_athena_workgroup",
          "aws_autoscaling_attachment",
          "aws_autoscaling_group",
          "aws_autoscaling_lifecycle_hook",
          "aws_autoscaling_notification",
          "aws_autoscaling_policy",
          "aws_autoscaling_schedule",
          "aws_backup_plan",
          "aws_backup_selection",
          "aws_backup_vault",
          "aws_batch_compute_environment",
          "aws_batch_job_definition",
          "aws_batch_job_queue",
          "aws_budgets_budget",
          "aws_cloud9_environment_ec2",
          "aws_cloudformation_stack",
          "aws_cloudformation_stack_set",
          "aws_cloudformation_stack_set_instance",
          "aws_cloudfront_distribution",
          "aws_cloudfront_origin_access_identity",
          "aws_cloudfront_public_key",
          "aws_cloudhsm_v2_cluster",
          "aws_cloudhsm_v2_hsm",
          "aws_cloudtrail",
          "aws_cloudwatch_dashboard",
          "aws_cloudwatch_event_permission",
          "aws_cloudwatch_event_rule",
          "aws_cloudwatch_event_target",
          "aws_cloudwatch_log_destination",
          "aws_cloudwatch_log_destination_policy",
          "aws_cloudwatch_log_group",
          "aws_cloudwatch_log_metric_filter",
          "aws_cloudwatch_log_resource_policy",
          "aws_cloudwatch_log_stream",
          "aws_cloudwatch_log_subscription_filter",
          "aws_cloudwatch_metric_alarm",
          "aws_codebuild_project",
          "aws_codebuild_source_credential",
          "aws_codebuild_webhook",
          "aws_codecommit_repository",
          "aws_codecommit_trigger",
          "aws_codedeploy_app",
          "aws_codedeploy_deployment_config",
          "aws_codedeploy_deployment_group",
          "aws_codepipeline",
          "aws_codepipeline_webhook",
          "aws_codestarnotifications_notification_rule",
          "aws_cognito_identity_pool",
          "aws_cognito_identity_pool_roles_attachment",
          "aws_cognito_identity_provider",
          "aws_cognito_resource_server",
          "aws_cognito_user_group",
          "aws_cognito_user_pool",
          "aws_cognito_user_pool_client",
          "aws_cognito_user_pool_domain",
          "aws_config_aggregate_authorization",
          "aws_config_config_rule",
          "aws_config_configuration_aggregator",
          "aws_config_configuration_recorder",
          "aws_config_configuration_recorder_status",
          "aws_config_delivery_channel",
          "aws_config_organization_custom_rule",
          "aws_config_organization_managed_rule",
          "aws_cur_report_definition",
          "aws_dlm_lifecycle_policy",
          "aws_datapipeline_pipeline",
          "aws_datasync_agent",
          "aws_datasync_location_efs",
          "aws_datasync_location_nfs",
          "aws_datasync_location_s3",
          "aws_datasync_location_smb",
          "aws_datasync_task",
          "aws_dms_certificate",
          "aws_dms_endpoint",
          "aws_dms_event_subscription",
          "aws_dms_replication_instance",
          "aws_dms_replication_subnet_group",
          "aws_dms_replication_task",
          "aws_devicefarm_project",
          "aws_dx_bgp_peer",
          "aws_dx_connection",
          "aws_dx_connection_association",
          "aws_dx_gateway",
          "aws_dx_gateway_association",
          "aws_dx_gateway_association_proposal",
          "aws_dx_hosted_private_virtual_interface",
          "aws_dx_hosted_private_virtual_interface_accepter",
          "aws_dx_hosted_public_virtual_interface",
          "aws_dx_hosted_public_virtual_interface_accepter",
          "aws_dx_hosted_transit_virtual_interface",
          "aws_dx_hosted_transit_virtual_interface_accepter",
          "aws_dx_lag",
          "aws_dx_private_virtual_interface",
          "aws_dx_public_virtual_interface",
          "aws_dx_transit_virtual_interface",
          "aws_directory_service_conditional_forwarder",
          "aws_directory_service_directory",
          "aws_directory_service_log_subscription",
          "aws_docdb_cluster",
          "aws_docdb_cluster_instance",
          "aws_docdb_cluster_parameter_group",
          "aws_docdb_cluster_snapshot",
          "aws_docdb_subnet_group",
          "aws_dynamodb_global_table",
          "aws_dynamodb_table",
          "aws_dynamodb_table_item",
          "aws_dax_cluster",
          "aws_dax_parameter_group",
          "aws_dax_subnet_group",
          "aws_ami",
          "aws_ami_copy",
          "aws_ami_from_instance",
          "aws_ami_launch_permission",
          "aws_ebs_default_kms_key",
          "aws_ebs_encryption_by_default",
          "aws_ebs_snapshot",
          "aws_ebs_snapshot_copy",
          "aws_ebs_volume",
          "aws_ec2_availability_zone_group",
          "aws_ec2_capacity_reservation",
          "aws_ec2_client_vpn_authorization_rule",
          "aws_ec2_client_vpn_endpoint",
          "aws_ec2_client_vpn_network_association",
          "aws_ec2_client_vpn_route",
          "aws_ec2_fleet",
          "aws_ec2_local_gateway_route",
          "aws_ec2_local_gateway_route_table_vpc_association",
          "aws_ec2_tag",
          "aws_ec2_traffic_mirror_filter",
          "aws_ec2_traffic_mirror_filter_rule",
          "aws_ec2_traffic_mirror_session",
          "aws_ec2_traffic_mirror_target",
          "aws_ec2_transit_gateway",
          "aws_ec2_transit_gateway_peering_attachment",
          "aws_ec2_transit_gateway_peering_attachment_accepter",
          "aws_ec2_transit_gateway_route",
          "aws_ec2_transit_gateway_route_table",
          "aws_ec2_transit_gateway_route_table_association",
          "aws_ec2_transit_gateway_route_table_propagation",
          "aws_ec2_transit_gateway_vpc_attachment",
          "aws_ec2_transit_gateway_vpc_attachment_accepter",
          "aws_eip",
          "aws_eip_association",
          "aws_instance",
          "aws_key_pair",
          "aws_launch_configuration",
          "aws_launch_template",
          "aws_placement_group",
          "aws_snapshot_create_volume_permission",
          "aws_spot_datafeed_subscription",
          "aws_spot_fleet_request",
          "aws_spot_instance_request",
          "aws_volume_attachment",
          "aws_ecr_lifecycle_policy",
          "aws_ecr_repository",
          "aws_ecr_repository_policy",
          "aws_ecs_capacity_provider",
          "aws_ecs_cluster",
          "aws_ecs_service",
          "aws_ecs_task_definition",
          "aws_efs_access_point",
          "aws_efs_file_system",
          "aws_efs_file_system_policy",
          "aws_efs_mount_target",
          "aws_eks_cluster",
          "aws_eks_fargate_profile",
          "aws_eks_node_group",
          "aws_elasticache_cluster",
          "aws_elasticache_parameter_group",
          "aws_elasticache_replication_group",
          "aws_elasticache_security_group",
          "aws_elasticache_subnet_group",
          "aws_elastic_beanstalk_application",
          "aws_elastic_beanstalk_application_version",
          "aws_elastic_beanstalk_configuration_template",
          "aws_elastic_beanstalk_environment",
          "aws_app_cookie_stickiness_policy",
          "aws_elb",
          "aws_elb_attachment",
          "aws_lb_cookie_stickiness_policy",
          "aws_lb_ssl_negotiation_policy",
          "aws_load_balancer_backend_server_policy",
          "aws_load_balancer_listener_policy",
          "aws_load_balancer_policy",
          "aws_proxy_protocol_policy",
          "aws_lb",
          "aws_lb_listener",
          "aws_lb_listener_certificate",
          "aws_lb_listener_rule",
          "aws_lb_target_group",
          "aws_lb_target_group_attachment",
          "aws_emr_cluster",
          "aws_emr_instance_group",
          "aws_emr_security_configuration",
          "aws_elastictranscoder_pipeline",
          "aws_elastictranscoder_preset",
          "aws_elasticsearch_domain",
          "aws_elasticsearch_domain_policy",
          "aws_fsx_lustre_file_system",
          "aws_fsx_windows_file_system",
          "aws_fms_admin_account",
          "aws_gamelift_alias",
          "aws_gamelift_build",
          "aws_gamelift_fleet",
          "aws_gamelift_game_session_queue",
          "aws_glacier_vault",
          "aws_glacier_vault_lock",
          "aws_globalaccelerator_accelerator",
          "aws_globalaccelerator_endpoint_group",
          "aws_globalaccelerator_listener",
          "aws_glue_catalog_database",
          "aws_glue_catalog_table",
          "aws_glue_classifier",
          "aws_glue_connection",
          "aws_glue_crawler",
          "aws_glue_job",
          "aws_glue_security_configuration",
          "aws_glue_trigger",
          "aws_glue_workflow",
          "aws_guardduty_detector",
          "aws_guardduty_invite_accepter",
          "aws_guardduty_ipset",
          "aws_guardduty_member",
          "aws_guardduty_organization_admin_account",
          "aws_guardduty_organization_configuration",
          "aws_guardduty_threatintelset",
          "aws_iam_access_key",
          "aws_iam_account_alias",
          "aws_iam_account_password_policy",
          "aws_iam_group",
          "aws_iam_group_membership",
          "aws_iam_group_policy",
          "aws_iam_group_policy_attachment",
          "aws_iam_instance_profile",
          "aws_iam_openid_connect_provider",
          "aws_iam_policy",
          "aws_iam_policy_attachment",
          "aws_iam_policy_document",
          "aws_iam_role",
          "aws_iam_role_policy",
          "aws_iam_role_policy_attachment",
          "aws_iam_saml_provider",
          "aws_iam_server_certificate",
          "aws_iam_service_linked_role",
          "aws_iam_user",
          "aws_iam_user_group_membership",
          "aws_iam_user_login_profile",
          "aws_iam_user_policy",
          "aws_iam_user_policy_attachment",
          "aws_iam_user_ssh_key",
          "aws_inspector_assessment_target",
          "aws_inspector_assessment_template",
          "aws_inspector_resource_group",
          "aws_iot_certificate",
          "aws_iot_policy",
          "aws_iot_policy_attachment",
          "aws_iot_role_alias",
          "aws_iot_thing",
          "aws_iot_thing_principal_attachment",
          "aws_iot_thing_type",
          "aws_iot_topic_rule",
          "aws_kms_alias",
          "aws_kms_ciphertext",
          "aws_kms_external_key",
          "aws_kms_grant",
          "aws_kms_key",
          "aws_kinesis_analytics_application",
          "aws_kinesis_stream",
          "aws_kinesis_firehose_delivery_stream",
          "aws_kinesis_video_stream",
          "aws_lambda_alias",
          "aws_lambda_event_source_mapping",
          "aws_lambda_function",
          "aws_lambda_function_event_invoke_config",
          "aws_lambda_layer_version",
          "aws_lambda_permission",
          "aws_lambda_provisioned_concurrency_config",
          "aws_licensemanager_association",
          "aws_licensemanager_license_configuration",
          "aws_lightsail_domain",
          "aws_lightsail_instance",
          "aws_lightsail_key_pair",
          "aws_lightsail_static_ip",
          "aws_lightsail_static_ip_attachment",
          "aws_mq_broker",
          "aws_mq_configuration",
          "aws_macie_member_account_association",
          "aws_macie_s3_bucket_association",
          "aws_msk_cluster",
          "aws_msk_configuration",
          "aws_media_convert_queue",
          "aws_media_package_channel",
          "aws_media_store_container",
          "aws_media_store_container_policy",
          "aws_neptune_cluster",
          "aws_neptune_cluster_instance",
          "aws_neptune_cluster_parameter_group",
          "aws_neptune_cluster_snapshot",
          "aws_neptune_event_subscription",
          "aws_neptune_parameter_group",
          "aws_neptune_subnet_group",
          "aws_opsworks_application",
          "aws_opsworks_custom_layer",
          "aws_opsworks_ganglia_layer",
          "aws_opsworks_haproxy_layer",
          "aws_opsworks_instance",
          "aws_opsworks_java_app_layer",
          "aws_opsworks_memcached_layer",
          "aws_opsworks_mysql_layer",
          "aws_opsworks_nodejs_app_layer",
          "aws_opsworks_permission",
          "aws_opsworks_php_app_layer",
          "aws_opsworks_rails_app_layer",
          "aws_opsworks_rds_db_instance",
          "aws_opsworks_stack",
          "aws_opsworks_static_web_layer",
          "aws_opsworks_user_profile",
          "aws_organizations_account",
          "aws_organizations_organization",
          "aws_organizations_organizational_unit",
          "aws_organizations_policy",
          "aws_organizations_policy_attachment",
          "aws_pinpoint_adm_channel",
          "aws_pinpoint_apns_channel",
          "aws_pinpoint_apns_sandbox_channel",
          "aws_pinpoint_apns_voip_channel",
          "aws_pinpoint_apns_voip_sandbox_channel",
          "aws_pinpoint_app",
          "aws_pinpoint_baidu_channel",
          "aws_pinpoint_email_channel",
          "aws_pinpoint_event_stream",
          "aws_pinpoint_gcm_channel",
          "aws_pinpoint_sms_channel",
          "aws_qldb_ledger",
          "aws_quicksight_group",
          "aws_quicksight_user",
          "aws_ram_principal_association",
          "aws_ram_resource_association",
          "aws_ram_resource_share",
          "aws_ram_resource_share_accepter",
          "aws_db_cluster_snapshot",
          "aws_db_event_subscription",
          "aws_db_instance",
          "aws_db_instance_role_association",
          "aws_db_option_group",
          "aws_db_parameter_group",
          "aws_db_security_group",
          "aws_db_snapshot",
          "aws_db_subnet_group",
          "aws_rds_cluster",
          "aws_rds_cluster_endpoint",
          "aws_rds_cluster_instance",
          "aws_rds_cluster_parameter_group",
          "aws_rds_global_cluster",
          "aws_redshift_cluster",
          "aws_redshift_event_subscription",
          "aws_redshift_parameter_group",
          "aws_redshift_security_group",
          "aws_redshift_snapshot_copy_grant",
          "aws_redshift_snapshot_schedule",
          "aws_redshift_snapshot_schedule_association",
          "aws_redshift_subnet_group",
          "aws_resourcegroups_group",
          "aws_route53_delegation_set",
          "aws_route53_health_check",
          "aws_route53_query_log",
          "aws_route53_record",
          "aws_route53_zone",
          "aws_route53_zone_association",
          "aws_route53_resolver_endpoint",
          "aws_route53_resolver_rule",
          "aws_route53_resolver_rule_association",
          "aws_s3_access_point",
          "aws_s3_account_public_access_block",
          "aws_s3_bucket",
          "aws_s3_bucket_analytics_configuration",
          "aws_s3_bucket_inventory",
          "aws_s3_bucket_metric",
          "aws_s3_bucket_notification",
          "aws_s3_bucket_object",
          "aws_s3_bucket_policy",
          "aws_s3_bucket_public_access_block",
          "aws_ses_active_receipt_rule_set",
          "aws_ses_configuration_set",
          "aws_ses_domain_dkim",
          "aws_ses_domain_identity",
          "aws_ses_domain_identity_verification",
          "aws_ses_domain_mail_from",
          "aws_ses_email_identity",
          "aws_ses_event_destination",
          "aws_ses_identity_notification_topic",
          "aws_ses_identity_policy",
          "aws_ses_receipt_filter",
          "aws_ses_receipt_rule",
          "aws_ses_receipt_rule_set",
          "aws_ses_template",
          "aws_sns_platform_application",
          "aws_sns_sms_preferences",
          "aws_sns_topic",
          "aws_sns_topic_policy",
          "aws_sns_topic_subscription",
          "aws_sqs_queue",
          "aws_sqs_queue_policy",
          "aws_ssm_activation",
          "aws_ssm_association",
          "aws_ssm_document",
          "aws_ssm_maintenance_window",
          "aws_ssm_maintenance_window_target",
          "aws_ssm_maintenance_window_task",
          "aws_ssm_parameter",
          "aws_ssm_patch_baseline",
          "aws_ssm_patch_group",
          "aws_ssm_resource_data_sync",
          "aws_swf_domain",
          "aws_sagemaker_endpoint",
          "aws_sagemaker_endpoint_configuration",
          "aws_sagemaker_model",
          "aws_sagemaker_notebook_instance",
          "aws_sagemaker_notebook_instance_lifecycle_configuration",
          "aws_secretsmanager_secret",
          "aws_secretsmanager_secret_rotation",
          "aws_secretsmanager_secret_version",
          "aws_securityhub_account",
          "aws_securityhub_member",
          "aws_securityhub_product_subscription",
          "aws_securityhub_standards_subscription",
          "aws_servicecatalog_portfolio",
          "aws_service_discovery_http_namespace",
          "aws_service_discovery_private_dns_namespace",
          "aws_service_discovery_public_dns_namespace",
          "aws_service_discovery_service",
          "aws_servicequotas_service_quota",
          "aws_shield_protection",
          "aws_simpledb_domain",
          "aws_sfn_activity",
          "aws_sfn_state_machine",
          "aws_storagegateway_cache",
          "aws_storagegateway_cached_iscsi_volume",
          "aws_storagegateway_gateway",
          "aws_storagegateway_nfs_file_share",
          "aws_storagegateway_smb_file_share",
          "aws_storagegateway_upload_buffer",
          "aws_storagegateway_working_storage",
          "aws_transfer_server",
          "aws_transfer_ssh_key",
          "aws_transfer_user",
          "aws_customer_gateway",
          "aws_default_network_acl",
          "aws_default_route_table",
          "aws_default_security_group",
          "aws_default_subnet",
          "aws_default_vpc",
          "aws_default_vpc_dhcp_options",
          "aws_egress_only_internet_gateway",
          "aws_flow_log",
          "aws_internet_gateway",
          "aws_main_route_table_association",
          "aws_nat_gateway",
          "aws_network_acl",
          "aws_network_acl_rule",
          "aws_network_interface",
          "aws_network_interface_attachment",
          "aws_network_interface_sg_attachment",
          "aws_route",
          "aws_route_table",
          "aws_route_table_association",
          "aws_security_group",
          "aws_security_group_rule",
          "aws_subnet",
          "aws_vpc",
          "aws_vpc_dhcp_options",
          "aws_vpc_dhcp_options_association",
          "aws_vpc_endpoint",
          "aws_vpc_endpoint_connection_notification",
          "aws_vpc_endpoint_route_table_association",
          "aws_vpc_endpoint_service",
          "aws_vpc_endpoint_service_allowed_principal",
          "aws_vpc_endpoint_subnet_association",
          "aws_vpc_ipv4_cidr_block_association",
          "aws_vpc_peering_connection",
          "aws_vpc_peering_connection_accepter",
          "aws_vpc_peering_connection_options",
          "aws_vpn_connection",
          "aws_vpn_connection_route",
          "aws_vpn_gateway",
          "aws_vpn_gateway_attachment",
          "aws_vpn_gateway_route_propagation",
          "aws_waf_byte_match_set",
          "aws_waf_geo_match_set",
          "aws_waf_ipset",
          "aws_waf_rate_based_rule",
          "aws_waf_regex_match_set",
          "aws_waf_regex_pattern_set",
          "aws_waf_rule",
          "aws_waf_rule_group",
          "aws_waf_size_constraint_set",
          "aws_waf_sql_injection_match_set",
          "aws_waf_web_acl",
          "aws_waf_xss_match_set",
          "aws_wafregional_byte_match_set",
          "aws_wafregional_geo_match_set",
          "aws_wafregional_ipset",
          "aws_wafregional_rate_based_rule",
          "aws_wafregional_regex_match_set",
          "aws_wafregional_regex_pattern_set",
          "aws_wafregional_rule",
          "aws_wafregional_rule_group",
          "aws_wafregional_size_constraint_set",
          "aws_wafregional_sql_injection_match_set",
          "aws_wafregional_web_acl",
          "aws_wafregional_web_acl_association",
          "aws_wafregional_xss_match_set",
          "aws_wafv2_ip_set",
          "aws_wafv2_regex_pattern_set",
          "aws_wafv2_rule_group",
          "aws_wafv2_web_acl",
          "aws_wafv2_web_acl_association",
          "aws_wafv2_web_acl_logging_configuration",
          "aws_worklink_fleet",
          "aws_worklink_website_certificate_authority_association",
          "aws_workspaces_directory",
          "aws_workspaces_ip_group",
          "aws_workspaces_workspace",
          "aws_xray_sampling_rule",
          "aws_route53_vpc_association_authorization",
          "aws_acmpca_certificate",
          "aws_acmpca_certificate_authority_certificate",
          "aws_cloudfront_key_group",
          "aws_cloudwatch_query_definition",
          "aws_cognito_user_pool_ui_customization",
          "aws_ecr_registry_policy",
          "aws_ecr_replication_configuration",
          "aws_ecrpublic_repository",
          "aws_eks_addon",
          "aws_kinesis_stream_consumer",
          "aws_kinesisanalyticsv2_application_snapshot",
          "aws_lightsail_instance_public_ports",
          "aws_mwaa_environment",
          "aws_route53_hosted_zone_dnssec",
          "aws_route53_resolver_firewall_domain_list",
          "aws_route53_resolver_firewall_rule_group",
          "aws_sagemaker_app",
          "aws_securityhub_insight"
        ]
      },
      "GcpResourceTypes": {
        "type": "string",
        "enum": [
          "google_access_context_manager_access_level",
          "google_access_context_manager_access_policy",
          "google_access_context_manager_service_perimeter",
          "google_access_context_manager_service_perimeter_resource",
          "google_app_engine_application",
          "google_app_engine_application_url_dispatch_rules",
          "google_app_engine_domain_mapping",
          "google_app_engine_firewall_rule",
          "google_app_engine_flexible_app_version",
          "google_app_engine_service_split_traffic",
          "google_app_engine_standard_app_version",
          "google_bigquery_dataset",
          "google_bigquery_dataset_access",
          "google_bigquery_dataset_iam",
          "google_bigquery_job",
          "google_bigquery_table",
          "google_bigquery_data_transfer_config",
          "google_binary_authorization_attestor",
          "google_binary_authorization_attestor_iam",
          "google_binary_authorization_policy",
          "google_logging_billing_account_bucket_config",
          "google_logging_billing_account_exclusion",
          "google_logging_billing_account_sink",
          "google_logging_folder_bucket_config",
          "google_logging_folder_exclusion",
          "google_logging_folder_sink",
          "google_logging_metric",
          "google_logging_organization_bucket_config",
          "google_logging_organization_exclusion",
          "google_logging_organization_sink",
          "google_logging_project_bucket_config",
          "google_logging_project_exclusion",
          "google_logging_project_sink",
          "google_monitoring_alert_policy",
          "google_monitoring_dashboard",
          "google_monitoring_group",
          "google_monitoring_metric_descriptor",
          "google_monitoring_notification_channel",
          "google_monitoring_service",
          "google_monitoring_slo",
          "google_monitoring_uptime_check_config",
          "google_cloud_asset_folder_feed",
          "google_cloud_asset_organization_feed",
          "google_cloud_asset_project_feed",
          "google_bigtable_app_profile",
          "google_bigtable_gc_policy",
          "google_bigtable_instance",
          "google_bigtable_instance_iam",
          "google_bigtable_table",
          "google_cloudbuild_trigger",
          "google_composer_environment",
          "google_dns_managed_zone",
          "google_dns_policy",
          "google_dns_record_set",
          "google_deployment_manager_deployment",
          "google_endpoints_service",
          "google_endpoints_service_iam",
          "google_cloudfunctions_cloud_function_iam",
          "google_cloudfunctions_function",
          "google_healthcare_dataset",
          "google_healthcare_dataset_iam",
          "google_healthcare_dicom_store",
          "google_healthcare_dicom_store_iam",
          "google_healthcare_fhir_store",
          "google_healthcare_fhir_store_iam",
          "google_healthcare_hl7_v2_store",
          "google_healthcare_hl7_v2_store_iam",
          "google_cloudiot_device",
          "google_cloudiot_device_registry",
          "google_kms_crypto_key_iam",
          "google_kms_key_ring_iam",
          "google_kms_crypto_key",
          "google_kms_key_ring",
          "google_kms_key_ring_import_job",
          "google_kms_secret_ciphertext",
          "google_billing_account_iam_binding",
          "google_billing_account_iam_member",
          "google_billing_account_iam_policy",
          "google_folder",
          "google_folder_iam_audit_config",
          "google_folder_iam_binding",
          "google_folder_iam_member",
          "google_folder_iam_policy",
          "google_folder_organization_policy",
          "google_organization_iam_audit_config",
          "google_organization_iam_binding",
          "google_organization_iam_custom_role",
          "google_organization_iam_member",
          "google_organization_iam_policy",
          "google_organization_policy",
          "google_project",
          "google_project_iam_binding",
          "google_project_iam_member",
          "google_project_iam_custom_role",
          "google_project_organization_policy",
          "google_project_service",
          "google_service_account",
          "google_service_account_iam",
          "google_service_account_key",
          "google_usage_export_bucket",
          "google_pubsub_subscription",
          "google_pubsub_subscription_iam",
          "google_pubsub_topic",
          "google_pubsub_topic_iam",
          "google_cloud_run_domain_mapping",
          "google_cloud_run_service",
          "google_cloud_run_service_iam",
          "google_sql_database",
          "google_sql_database_instance",
          "google_sql_source_representation_instance",
          "google_sql_ssl_cert",
          "google_sql_user",
          "google_cloud_scheduler_job",
          "google_sourcerepo_repository",
          "google_sourcerepo_repository_iam",
          "google_spanner_database",
          "google_spanner_database_iam",
          "google_spanner_instance",
          "google_spanner_instance_iam",
          "google_storage_bucket",
          "google_storage_bucket_access_control",
          "google_storage_bucket_acl",
          "google_storage_bucket_iam_binding",
          "google_storage_bucket_iam_member",
          "google_storage_bucket_object",
          "google_storage_default_object_access_control",
          "google_storage_default_object_acl",
          "google_storage_hmac_key",
          "google_storage_notification",
          "google_storage_object_access_control",
          "google_storage_object_acl",
          "google_tpu_node",
          "google_cloud_tasks_queue",
          "google_compute_address",
          "google_compute_attached_disk",
          "google_compute_autoscaler",
          "google_compute_backend_bucket",
          "google_compute_backend_bucket_signed_url_key",
          "google_compute_backend_service",
          "google_compute_backend_service_signed_url_key",
          "google_compute_disk",
          "google_compute_disk_resource_policy_attachment",
          "google_compute_firewall",
          "google_compute_forwarding_rule",
          "google_compute_global_address",
          "google_compute_global_forwarding_rule",
          "google_compute_global_network_endpoint",
          "google_compute_global_network_endpoint_group",
          "google_compute_health_check",
          "google_compute_http_health_check",
          "google_compute_https_health_check",
          "google_compute_image",
          "google_compute_instance",
          "google_compute_instance_from_template",
          "google_compute_instance_group",
          "google_compute_instance_group_manager",
          "google_compute_instance_group_named_port",
          "google_compute_instance_iam",
          "google_compute_instance_template",
          "google_compute_interconnect_attachment",
          "google_compute_network",
          "google_compute_network_endpoint",
          "google_compute_network_endpoint_group",
          "google_compute_network_peering",
          "google_compute_network_peering_routes_config",
          "google_compute_node_group",
          "google_compute_node_template",
          "google_compute_project_default_network_tier",
          "google_compute_project_metadata",
          "google_compute_project_metadata_item",
          "google_compute_region_autoscaler",
          "google_compute_region_backend_service",
          "google_compute_region_disk",
          "google_compute_region_disk_resource_policy_attachment",
          "google_compute_region_health_check",
          "google_compute_region_instance_group_manager",
          "google_compute_region_ssl_certificate",
          "google_compute_region_target_http_proxy",
          "google_compute_region_target_https_proxy",
          "google_compute_region_url_map",
          "google_compute_reservation",
          "google_compute_resource_policy",
          "google_compute_route",
          "google_compute_router",
          "google_compute_router_bgp_peer",
          "google_compute_router_interface",
          "google_compute_router_nat",
          "google_compute_security_policy",
          "google_compute_shared_vpc_host_project",
          "google_compute_shared_vpc_service_project",
          "google_compute_snapshot",
          "google_compute_ssl_certificate",
          "google_compute_ssl_policy",
          "google_compute_subnetwork",
          "google_compute_subnetwork_iam",
          "google_compute_target_http_proxy",
          "google_compute_target_https_proxy",
          "google_compute_target_instance",
          "google_compute_target_pool",
          "google_compute_target_ssl_proxy",
          "google_compute_target_tcp_proxy",
          "google_compute_url_map",
          "google_compute_vpn_gateway",
          "google_compute_vpn_tunnel",
          "google_container_analysis_note",
          "google_container_analysis_occurrence",
          "google_container_registry",
          "google_data_catalog_entry",
          "google_data_catalog_entry_group",
          "google_data_catalog_entry_group_iam",
          "google_data_catalog_tag",
          "google_data_catalog_tag_template",
          "google_dataflow_job",
          "google_dataproc_autoscaling_policy",
          "google_dataproc_cluster",
          "google_dataproc_cluster_iam",
          "google_dataproc_job",
          "google_dataproc_job_iam",
          "google_datastore_index",
          "google_dialogflow_agent",
          "google_dialogflow_entity_type",
          "google_dialogflow_intent",
          "google_filestore_instance",
          "google_firestore_index",
          "google_identity_platform_default_supported_idp_config",
          "google_identity_platform_inbound_saml_config",
          "google_identity_platform_oauth_idp_config",
          "google_identity_platform_tenant",
          "google_identity_platform_tenant_default_supported_idp_config",
          "google_identity_platform_tenant_inbound_saml_config",
          "google_identity_platform_tenant_oauth_idp_config",
          "google_iap_app_engine_service_iam",
          "google_iap_app_engine_version_iam",
          "google_iap_brand",
          "google_iap_client",
          "google_iap_tunnel_instance_iam",
          "google_iap_web_backend_service_iam",
          "google_iap_web_iam",
          "google_iap_web_type_app_engine_iam",
          "google_iap_web_type_compute_iam",
          "google_container_cluster",
          "google_container_node_pool",
          "google_ml_engine_model",
          "google_redis_instance",
          "google_network_management_connectivity_test_resource",
          "google_os_config_patch_deployment",
          "google_os_login_ssh_public_key",
          "google_resource_manager_lien",
          "google_runtimeconfig_config",
          "google_runtimeconfig_config_iam",
          "google_runtimeconfig_variable",
          "google_secret_manager_secret",
          "google_secret_manager_secret_iam",
          "google_secret_manager_secret_version",
          "google_scc_source",
          "google_vpc_access_connector",
          "google_service_networking_connection",
          "google_storage_transfer_job",
          "google_project_iam",
          "google_storage_bucket_iam",
          "google_dataflow_flex_template_job",
          "google_active_directory_domain",
          "google_apigee_envgroup",
          "google_apigee_envgroup_attachment",
          "google_apigee_environment",
          "google_apigee_instance",
          "google_apigee_instance_attachment",
          "google_data_catalog_tag_template_iam_binding",
          "google_data_catalog_tag_template_iam_member",
          "google_data_catalog_tag_template_iam_policy",
          "google_eventarc_trigger",
          "google_healthcare_consent_store",
          "google_healthcare_consent_store_iam_binding",
          "google_healthcare_consent_store_iam_member",
          "google_healthcare_consent_store_iam_policy",
          "google_tags_tag_binding",
          "google_tags_tag_key",
          "google_tags_tag_key_iam_binding",
          "google_tags_tag_key_iam_member",
          "google_tags_tag_key_iam_policy",
          "google_tags_tag_value",
          "google_tags_tag_value_iam_binding",
          "google_tags_tag_value_iam_member",
          "google_tags_tag_value_iam_policy",
          "google_workflows_workflow"
        ]
      },
      "AzureResourceTypes": {
        "type": "string",
        "enum": [
          "azurerm_api_management",
          "azurerm_api_management_api",
          "azurerm_api_management_api_operation",
          "azurerm_api_management_api_operation_policy",
          "azurerm_api_management_api_policy",
          "azurerm_api_management_api_schema",
          "azurerm_api_management_api_version_set",
          "azurerm_api_management_authorization_server",
          "azurerm_api_management_backend",
          "azurerm_api_management_certificate",
          "azurerm_api_management_diagnostic",
          "azurerm_api_management_group",
          "azurerm_api_management_group_user",
          "azurerm_api_management_identity_provider_aad",
          "azurerm_api_management_identity_provider_facebook",
          "azurerm_api_management_identity_provider_google",
          "azurerm_api_management_identity_provider_microsoft",
          "azurerm_api_management_identity_provider_twitter",
          "azurerm_api_management_logger",
          "azurerm_api_management_named_value",
          "azurerm_api_management_openid_connect_provider",
          "azurerm_api_management_product",
          "azurerm_api_management_product_api",
          "azurerm_api_management_product_group",
          "azurerm_api_management_product_policy",
          "azurerm_api_management_property",
          "azurerm_api_management_subscription",
          "azurerm_api_management_user",
          "azurerm_analysis_services_server",
          "azurerm_app_configuration",
          "azurerm_app_service",
          "azurerm_app_service_active_slot",
          "azurerm_app_service_certificate",
          "azurerm_app_service_certificate_order",
          "azurerm_app_service_custom_hostname_binding",
          "azurerm_app_service_environment",
          "azurerm_app_service_hybrid_connection",
          "azurerm_app_service_plan",
          "azurerm_app_service_slot",
          "azurerm_app_service_slot_virtual_network_swift_connection",
          "azurerm_app_service_source_control_token",
          "azurerm_app_service_virtual_network_swift_connection",
          "azurerm_function_app",
          "azurerm_function_app_slot",
          "azurerm_application_insights",
          "azurerm_application_insights_analytics_item",
          "azurerm_application_insights_api_key",
          "azurerm_application_insights_web_test",
          "azurerm_role_assignment",
          "azurerm_role_definition",
          "azurerm_user_assigned_identity",
          "azurerm_automation_account",
          "azurerm_automation_certificate",
          "azurerm_automation_connection",
          "azurerm_automation_connection_certificate",
          "azurerm_automation_connection_classic_certificate",
          "azurerm_automation_connection_service_principal",
          "azurerm_automation_credential",
          "azurerm_automation_dsc_configuration",
          "azurerm_automation_dsc_nodeconfiguration",
          "azurerm_automation_job_schedule",
          "azurerm_automation_module",
          "azurerm_automation_runbook",
          "azurerm_automation_schedule",
          "azurerm_automation_variable_bool",
          "azurerm_automation_variable_datetime",
          "azurerm_automation_variable_int",
          "azurerm_automation_variable_string",
          "azurerm_resource_group",
          "azurerm_batch_account",
          "azurerm_batch_application",
          "azurerm_batch_certificate",
          "azurerm_batch_pool",
          "azurerm_blueprint_assignment",
          "azurerm_bot_channel_directline",
          "azurerm_bot_channel_email",
          "azurerm_bot_channel_ms_teams",
          "azurerm_bot_channel_slack",
          "azurerm_bot_channels_registration",
          "azurerm_bot_connection",
          "azurerm_bot_web_app",
          "azurerm_cdn_endpoint",
          "azurerm_cdn_profile",
          "azurerm_cognitive_account",
          "azurerm_availability_set",
          "azurerm_dedicated_host",
          "azurerm_dedicated_host_group",
          "azurerm_disk_encryption_set",
          "azurerm_image",
          "azurerm_linux_virtual_machine",
          "azurerm_linux_virtual_machine_scale_set",
          "azurerm_managed_disk",
          "azurerm_marketplace_agreement",
          "azurerm_orchestrated_virtual_machine_scale_set",
          "azurerm_proximity_placement_group",
          "azurerm_shared_image",
          "azurerm_shared_image_gallery",
          "azurerm_shared_image_version",
          "azurerm_snapshot",
          "azurerm_virtual_machine",
          "azurerm_virtual_machine_data_disk_attachment",
          "azurerm_virtual_machine_extension",
          "azurerm_virtual_machine_scale_set",
          "azurerm_virtual_machine_scale_set_extension",
          "azurerm_windows_virtual_machine",
          "azurerm_windows_virtual_machine_scale_set",
          "azurerm_container_group",
          "azurerm_container_registry",
          "azurerm_container_registry_webhook",
          "azurerm_kubernetes_cluster",
          "azurerm_kubernetes_cluster_node_pool",
          "azurerm_cosmosdb_account",
          "azurerm_cosmosdb_cassandra_keyspace",
          "azurerm_cosmosdb_gremlin_database",
          "azurerm_cosmosdb_gremlin_graph",
          "azurerm_cosmosdb_mongo_collection",
          "azurerm_cosmosdb_mongo_database",
          "azurerm_cosmosdb_sql_container",
          "azurerm_cosmosdb_sql_database",
          "azurerm_cosmosdb_table",
          "azurerm_cost_management_export_resource_group",
          "azurerm_custom_provider",
          "azurerm_dns_a_record",
          "azurerm_dns_aaaa_record",
          "azurerm_dns_caa_record",
          "azurerm_dns_cname_record",
          "azurerm_dns_mx_record",
          "azurerm_dns_ns_record",
          "azurerm_dns_ptr_record",
          "azurerm_dns_srv_record",
          "azurerm_dns_txt_record",
          "azurerm_dns_zone",
          "azurerm_kusto_attached_database_configuration",
          "azurerm_kusto_cluster",
          "azurerm_kusto_cluster_customer_managed_key",
          "azurerm_kusto_cluster_principal_assignment",
          "azurerm_kusto_database",
          "azurerm_kusto_database_principal",
          "azurerm_kusto_database_principal_assignment",
          "azurerm_kusto_eventhub_data_connection",
          "azurerm_data_factory",
          "azurerm_data_factory_dataset_azure_blob",
          "azurerm_data_factory_dataset_cosmosdb_sqlapi",
          "azurerm_data_factory_dataset_delimited_text",
          "azurerm_data_factory_dataset_http",
          "azurerm_data_factory_dataset_json",
          "azurerm_data_factory_dataset_mysql",
          "azurerm_data_factory_dataset_postgresql",
          "azurerm_data_factory_dataset_sql_server_table",
          "azurerm_data_factory_integration_runtime_managed",
          "azurerm_data_factory_integration_runtime_self_hosted",
          "azurerm_data_factory_linked_service_azure_blob_storage",
          "azurerm_data_factory_linked_service_azure_file_storage",
          "azurerm_data_factory_linked_service_azure_function",
          "azurerm_data_factory_linked_service_cosmosdb",
          "azurerm_data_factory_linked_service_data_lake_storage_gen2",
          "azurerm_data_factory_linked_service_key_vault",
          "azurerm_data_factory_linked_service_mysql",
          "azurerm_data_factory_linked_service_postgresql",
          "azurerm_data_factory_linked_service_sftp",
          "azurerm_data_factory_linked_service_sql_server",
          "azurerm_data_factory_linked_service_web",
          "azurerm_data_factory_pipeline",
          "azurerm_data_factory_trigger_schedule",
          "azurerm_data_lake_analytics_account",
          "azurerm_data_lake_analytics_firewall_rule",
          "azurerm_data_lake_store",
          "azurerm_data_lake_store_file",
          "azurerm_data_lake_store_firewall_rule",
          "azurerm_data_share",
          "azurerm_data_share_account",
          "azurerm_data_share_dataset_blob_storage",
          "azurerm_data_share_dataset_data_lake_gen1",
          "azurerm_mariadb_configuration",
          "azurerm_mariadb_database",
          "azurerm_mariadb_firewall_rule",
          "azurerm_mariadb_server",
          "azurerm_mariadb_virtual_network_rule",
          "azurerm_mssql_database",
          "azurerm_mssql_database_vulnerability_assessment_rule_baseline",
          "azurerm_mssql_elasticpool",
          "azurerm_mssql_server",
          "azurerm_mssql_server_security_alert_policy",
          "azurerm_mssql_server_vulnerability_assessment",
          "azurerm_mssql_virtual_machine",
          "azurerm_mysql_active_directory_administrator",
          "azurerm_mysql_configuration",
          "azurerm_mysql_database",
          "azurerm_mysql_firewall_rule",
          "azurerm_mysql_server",
          "azurerm_mysql_virtual_network_rule",
          "azurerm_postgresql_active_directory_administrator",
          "azurerm_postgresql_configuration",
          "azurerm_postgresql_database",
          "azurerm_postgresql_firewall_rule",
          "azurerm_postgresql_server",
          "azurerm_postgresql_virtual_network_rule",
          "azurerm_sql_active_directory_administrator",
          "azurerm_sql_database",
          "azurerm_sql_elasticpool",
          "azurerm_sql_failover_group",
          "azurerm_sql_firewall_rule",
          "azurerm_sql_server",
          "azurerm_sql_virtual_network_rule",
          "azurerm_database_migration_project",
          "azurerm_database_migration_service",
          "azurerm_databricks_workspace",
          "azurerm_dev_test_global_vm_shutdown_schedule",
          "azurerm_dev_test_lab",
          "azurerm_dev_test_linux_virtual_machine",
          "azurerm_dev_test_policy",
          "azurerm_dev_test_schedule",
          "azurerm_dev_test_virtual_network",
          "azurerm_dev_test_windows_virtual_machine",
          "azurerm_devspace_controller",
          "azurerm_hdinsight_hadoop_cluster",
          "azurerm_hdinsight_hbase_cluster",
          "azurerm_hdinsight_interactive_query_cluster",
          "azurerm_hdinsight_kafka_cluster",
          "azurerm_hdinsight_ml_services_cluster",
          "azurerm_hdinsight_rserver_cluster",
          "azurerm_hdinsight_spark_cluster",
          "azurerm_hdinsight_storm_cluster",
          "azurerm_dedicated_hardware_security_module",
          "azurerm_healthcare_service",
          "azurerm_iotcentral_application",
          "azurerm_iothub",
          "azurerm_iothub_consumer_group",
          "azurerm_iothub_dps",
          "azurerm_iothub_dps_certificate",
          "azurerm_iothub_dps_shared_access_policy",
          "azurerm_iothub_shared_access_policy",
          "azurerm_key_vault",
          "azurerm_key_vault_access_policy",
          "azurerm_key_vault_certificate",
          "azurerm_key_vault_certificate_issuer",
          "azurerm_key_vault_key",
          "azurerm_key_vault_secret",
          "azurerm_lb",
          "azurerm_lb_backend_address_pool",
          "azurerm_lb_nat_pool",
          "azurerm_lb_nat_rule",
          "azurerm_lb_outbound_rule",
          "azurerm_lb_probe",
          "azurerm_lb_rule",
          "azurerm_log_analytics_datasource_windows_event",
          "azurerm_log_analytics_datasource_windows_performance_counter",
          "azurerm_log_analytics_linked_service",
          "azurerm_log_analytics_solution",
          "azurerm_log_analytics_workspace",
          "azurerm_logic_app_action_custom",
          "azurerm_logic_app_action_http",
          "azurerm_logic_app_integration_account",
          "azurerm_logic_app_trigger_custom",
          "azurerm_logic_app_trigger_http_request",
          "azurerm_logic_app_trigger_recurrence",
          "azurerm_logic_app_workflow",
          "azurerm_machine_learning_workspace",
          "azurerm_maintenance_assignment_dedicated_host",
          "azurerm_maintenance_assignment_virtual_machine",
          "azurerm_maintenance_configuration",
          "azurerm_managed_application",
          "azurerm_managed_application_definition",
          "azurerm_management_group",
          "azurerm_management_lock",
          "azurerm_maps_account",
          "azurerm_media_services_account",
          "azurerm_eventgrid_domain",
          "azurerm_eventgrid_domain_topic",
          "azurerm_eventgrid_event_subscription",
          "azurerm_eventgrid_topic",
          "azurerm_eventhub",
          "azurerm_eventhub_authorization_rule",
          "azurerm_eventhub_cluster",
          "azurerm_eventhub_consumer_group",
          "azurerm_eventhub_namespace",
          "azurerm_eventhub_namespace_authorization_rule",
          "azurerm_eventhub_namespace_disaster_recovery_config",
          "azurerm_iothub_endpoint_eventhub",
          "azurerm_iothub_endpoint_servicebus_queue",
          "azurerm_iothub_endpoint_servicebus_topic",
          "azurerm_iothub_endpoint_storage_container",
          "azurerm_iothub_fallback_route",
          "azurerm_iothub_route",
          "azurerm_notification_hub",
          "azurerm_notification_hub_authorization_rule",
          "azurerm_notification_hub_namespace",
          "azurerm_relay_hybrid_connection",
          "azurerm_relay_namespace",
          "azurerm_servicebus_namespace",
          "azurerm_servicebus_namespace_authorization_rule",
          "azurerm_servicebus_namespace_network_rule_set",
          "azurerm_servicebus_queue",
          "azurerm_servicebus_queue_authorization_rule",
          "azurerm_servicebus_subscription",
          "azurerm_servicebus_subscription_rule",
          "azurerm_servicebus_topic",
          "azurerm_servicebus_topic_authorization_rule",
          "azurerm_signalr_service",
          "azurerm_spatial_anchors_account",
          "azurerm_monitor_action_group",
          "azurerm_monitor_action_rule_action_group",
          "azurerm_monitor_action_rule_suppression",
          "azurerm_monitor_activity_log_alert",
          "azurerm_monitor_autoscale_setting",
          "azurerm_monitor_diagnostic_setting",
          "azurerm_monitor_log_profile",
          "azurerm_monitor_metric_alert",
          "azurerm_monitor_scheduled_query_rules_alert",
          "azurerm_monitor_scheduled_query_rules_log",
          "azurerm_netapp_account",
          "azurerm_netapp_pool",
          "azurerm_netapp_snapshot",
          "azurerm_netapp_volume",
          "azurerm_application_gateway",
          "azurerm_application_security_group",
          "azurerm_bastion_host",
          "azurerm_express_route_circuit",
          "azurerm_express_route_circuit_authorization",
          "azurerm_express_route_circuit_peering",
          "azurerm_express_route_gateway",
          "azurerm_firewall",
          "azurerm_firewall_application_rule_collection",
          "azurerm_firewall_nat_rule_collection",
          "azurerm_firewall_network_rule_collection",
          "azurerm_frontdoor",
          "azurerm_frontdoor_custom_https_configuration",
          "azurerm_frontdoor_firewall_policy",
          "azurerm_local_network_gateway",
          "azurerm_nat_gateway",
          "azurerm_nat_gateway_public_ip_association",
          "azurerm_network_ddos_protection_plan",
          "azurerm_network_interface",
          "azurerm_network_interface_application_gateway_backend_address_pool_association",
          "azurerm_network_interface_application_security_group_association",
          "azurerm_network_interface_backend_address_pool_association",
          "azurerm_network_interface_nat_rule_association",
          "azurerm_network_interface_security_group_association",
          "azurerm_network_packet_capture",
          "azurerm_network_profile",
          "azurerm_network_security_group",
          "azurerm_network_security_rule",
          "azurerm_network_watcher",
          "azurerm_network_watcher_flow_log",
          "azurerm_packet_capture",
          "azurerm_point_to_site_vpn_gateway",
          "azurerm_private_endpoint",
          "azurerm_private_link_service",
          "azurerm_public_ip",
          "azurerm_public_ip_prefix",
          "azurerm_route",
          "azurerm_route_filter",
          "azurerm_route_table",
          "azurerm_subnet",
          "azurerm_subnet_nat_gateway_association",
          "azurerm_subnet_network_security_group_association",
          "azurerm_subnet_route_table_association",
          "azurerm_traffic_manager_endpoint",
          "azurerm_traffic_manager_profile",
          "azurerm_virtual_hub",
          "azurerm_virtual_hub_connection",
          "azurerm_virtual_network",
          "azurerm_virtual_network_gateway",
          "azurerm_virtual_network_gateway_connection",
          "azurerm_virtual_network_peering",
          "azurerm_virtual_wan",
          "azurerm_vpn_gateway",
          "azurerm_vpn_server_configuration",
          "azurerm_web_application_firewall_policy",
          "azurerm_policy_assignment",
          "azurerm_policy_definition",
          "azurerm_policy_remediation",
          "azurerm_policy_set_definition",
          "azurerm_dashboard",
          "azurerm_powerbi_embedded",
          "azurerm_private_dns_a_record",
          "azurerm_private_dns_aaaa_record",
          "azurerm_private_dns_cname_record",
          "azurerm_private_dns_mx_record",
          "azurerm_private_dns_ptr_record",
          "azurerm_private_dns_srv_record",
          "azurerm_private_dns_txt_record",
          "azurerm_private_dns_zone",
          "azurerm_private_dns_zone_virtual_network_link",
          "azurerm_backup_container_storage_account",
          "azurerm_backup_policy_file_share",
          "azurerm_backup_policy_vm",
          "azurerm_backup_protected_file_share",
          "azurerm_backup_protected_vm",
          "azurerm_recovery_services_vault",
          "azurerm_site_recovery_fabric",
          "azurerm_site_recovery_network_mapping",
          "azurerm_site_recovery_protection_container",
          "azurerm_site_recovery_protection_container_mapping",
          "azurerm_site_recovery_replicated_vm",
          "azurerm_site_recovery_replication_policy",
          "azurerm_redis_cache",
          "azurerm_redis_firewall_rule",
          "azurerm_search_service",
          "azurerm_advanced_threat_protection",
          "azurerm_security_center_contact",
          "azurerm_security_center_subscription_pricing",
          "azurerm_security_center_workspace",
          "azurerm_sentinel_alert_rule_ms_security_incident",
          "azurerm_sentinel_alert_rule_scheduled",
          "azurerm_service_fabric_cluster",
          "azurerm_spring_cloud_app",
          "azurerm_spring_cloud_service",
          "azurerm_hpc_cache",
          "azurerm_hpc_cache_blob_target",
          "azurerm_hpc_cache_nfs_target",
          "azurerm_storage_account",
          "azurerm_storage_account_customer_managed_key",
          "azurerm_storage_account_network_rules",
          "azurerm_storage_blob",
          "azurerm_storage_container",
          "azurerm_storage_data_lake_gen2_filesystem",
          "azurerm_storage_management_policy",
          "azurerm_storage_queue",
          "azurerm_storage_share",
          "azurerm_storage_share_directory",
          "azurerm_storage_table",
          "azurerm_storage_table_entity",
          "azurerm_stream_analytics_function_javascript_udf",
          "azurerm_stream_analytics_job",
          "azurerm_stream_analytics_output_blob",
          "azurerm_stream_analytics_output_eventhub",
          "azurerm_stream_analytics_output_mssql",
          "azurerm_stream_analytics_output_servicebus_queue",
          "azurerm_stream_analytics_output_servicebus_topic",
          "azurerm_stream_analytics_reference_input_blob",
          "azurerm_stream_analytics_stream_input_blob",
          "azurerm_stream_analytics_stream_input_eventhub",
          "azurerm_stream_analytics_stream_input_iothub",
          "azurerm_synapse_workspace",
          "azurerm_template_deployment",
          "azurerm_iot_time_series_insights_access_policy",
          "azurerm_iot_time_series_insights_reference_data_set",
          "azurerm_iot_time_series_insights_standard_environment",
          "azurerm_api_management_email_template",
          "azurerm_communication_service",
          "azurerm_data_factory_dataset_parquet",
          "azurerm_data_factory_linked_service_azure_databricks",
          "azurerm_data_lake_store_virtual_network_rule",
          "azurerm_databox_edge_device",
          "azurerm_databox_edge_order",
          "azurerm_express_route_port",
          "azurerm_hpc_cache_access_policy",
          "azurerm_kusto_eventgrid_data_connection",
          "azurerm_kusto_iothub_data_connection",
          "azurerm_management_group_subscription_association",
          "azurerm_management_group_template_deployment",
          "azurerm_media_live_event",
          "azurerm_media_live_event_output",
          "azurerm_mssql_firewall_rule",
          "azurerm_mssql_virtual_network_rule",
          "azurerm_purview_account",
          "azurerm_redis_enterprise_cluster",
          "azurerm_redis_enterprise_database",
          "azurerm_security_center_assessment",
          "azurerm_security_center_assessment_metadata",
          "azurerm_security_center_assessment_policy",
          "azurerm_security_center_server_vulnerability_assessment",
          "azurerm_sentinel_data_connector_aws_cloud_trail",
          "azurerm_sentinel_data_connector_azure_active_directory",
          "azurerm_sentinel_data_connector_azure_advanced_threat_protection",
          "azurerm_sentinel_data_connector_azure_security_center",
          "azurerm_sentinel_data_connector_microsoft_cloud_app_security",
          "azurerm_sentinel_data_connector_office_365",
          "azurerm_sentinel_data_connector_threat_intelligence",
          "azurerm_spring_cloud_app_mysql_association",
          "azurerm_spring_cloud_app_redis_association",
          "azurerm_spring_cloud_custom_domain",
          "azurerm_subscription",
          "azurerm_tenant_template_deployment",
          "azurerm_vmware_private_cloud"
        ]
      },
      "CloudFormationResourceTypes": {
        "type": "string",
        "enum": [
          "AWS::ApiGateway::ClientCertificate",
          "AWS::ApiGateway::GatewayResponse",
          "AWS::ApplicationAutoScaling::ScalableTarget",
          "AWS::DataSync::LocationEFS",
          "AWS::Greengrass::SubscriptionDefinition",
          "AWS::Inspector::AssessmentTemplate",
          "AWS::Pinpoint::APNSVoipSandboxChannel",
          "AWS::ACMPCA::CertificateAuthority",
          "AWS::CodePipeline::Pipeline",
          "AWS::GroundStation::MissionProfile",
          "AWS::WAFRegional::ByteMatchSet",
          "AWS::IoTThingsGraph::FlowTemplate",
          "AWS::ACMPCA::CertificateAuthorityActivation",
          "AWS::Amplify::Branch",
          "AWS::DMS::ReplicationInstance",
          "AWS::EC2::FlowLog",
          "AWS::ElastiCache::GlobalReplicationGroup",
          "AWS::Glue::Database",
          "AWS::IAM::OIDCProvider",
          "AWS::SageMaker::DataQualityJobDefinition",
          "AWS::SageMaker::Image",
          "AWS::ApiGatewayV2::ApiMapping",
          "AWS::EKS::FargateProfile",
          "AWS::GameLift::MatchmakingRuleSet",
          "AWS::Greengrass::Group",
          "AWS::IoTWireless::ServiceProfile",
          "AWS::RoboMaker::RobotApplicationVersion",
          "AWS::SecretsManager::RotationSchedule",
          "AWS::FraudDetector::Outcome",
          "AWS::Glue::DevEndpoint",
          "AWS::Glue::Table",
          "AWS::RDS::EventSubscription",
          "AWS::ServiceCatalog::PortfolioShare",
          "AWS::EC2::TrafficMirrorTarget",
          "AWS::IoT::MitigationAction",
          "AWS::SageMaker::CodeRepository",
          "AWS::CloudFront::StreamingDistribution",
          "AWS::Glue::Partition",
          "AWS::IoT::ThingPrincipalAttachment",
          "AWS::Lambda::Permission",
          "AWS::WAFRegional::IPSet",
          "AWS::AmazonMQ::ConfigurationAssociation",
          "AWS::Cognito::UserPoolUICustomizationAttachment",
          "AWS::IAM::Role",
          "AWS::WAF::ByteMatchSet",
          "AWS::XRay::SamplingRule",
          "AWS::AppConfig::Application",
          "AWS::AppMesh::GatewayRoute",
          "AWS::AppStream::Stack",
          "AWS::CloudTrail::Trail",
          "AWS::DAX::ParameterGroup",
          "AWS::ElasticLoadBalancingV2::Listener",
          "AWS::SageMaker::DeviceFleet",
          "AWS::PinpointEmail::Identity",
          "AWS::ApiGateway::Account",
          "AWS::ApiGatewayV2::Deployment",
          "AWS::CloudFront::RealtimeLogConfig",
          "AWS::CodeBuild::SourceCredential",
          "AWS::Cognito::IdentityPool",
          "AWS::OpsWorks::Volume",
          "AWS::Pinpoint::App",
          "AWS::Pinpoint::APNSVoipChannel",
          "AWS::CodeBuild::Project",
          "AWS::DocDB::DBInstance",
          "AWS::EC2::NetworkAcl",
          "AWS::EventSchemas::Schema",
          "AWS::IoT::Policy",
          "AWS::IoTWireless::DeviceProfile",
          "AWS::IoTWireless::TaskDefinition",
          "AWS::Cassandra::Keyspace",
          "AWS::IoT1Click::Device",
          "AWS::MediaConnect::FlowEntitlement",
          "AWS::Neptune::DBCluster",
          "AWS::ServiceCatalogAppRegistry::Application",
          "AWS::ApiGatewayV2::ApiGatewayManagedOverrides",
          "AWS::EMR::InstanceGroupConfig",
          "AWS::ElasticLoadBalancingV2::ListenerCertificate",
          "AWS::Glue::SchemaVersionMetadata",
          "AWS::MediaPackage::Channel",
          "AWS::RoboMaker::Fleet",
          "AWS::SSM::Document",
          "AWS::AppSync::GraphQLApi",
          "AWS::SES::ReceiptFilter",
          "AWS::AmazonMQ::Broker",
          "AWS::EC2::SecurityGroup",
          "AWS::EC2::TrafficMirrorSession",
          "AWS::Greengrass::LoggerDefinitionVersion",
          "AWS::IoTSiteWise::Dashboard",
          "AWS::ServiceCatalog::StackSetConstraint",
          "AWS::ApiGateway::UsagePlanKey",
          "AWS::Config::RemediationConfiguration",
          "AWS::QLDB::Stream",
          "AWS::Cognito::UserPool",
          "AWS::EC2::Volume",
          "AWS::RDS::DBCluster",
          "AWS::SageMaker::Endpoint",
          "AWS::EC2::LaunchTemplate",
          "AWS::EMR::Step",
          "AWS::Glue::Schema",
          "AWS::MediaConvert::Preset",
          "AWS::S3ObjectLambda::AccessPoint",
          "AWS::Logs::Destination",
          "AWS::ApiGateway::Authorizer",
          "AWS::AppSync::FunctionConfiguration",
          "AWS::CloudFront::OriginRequestPolicy",
          "AWS::EC2::SubnetRouteTableAssociation",
          "AWS::ECS::TaskDefinition",
          "AWS::EMR::Cluster",
          "AWS::Events::Rule",
          "AWS::Pinpoint::ADMChannel",
          "AWS::S3Outposts::Endpoint",
          "AWS::AppSync::DataSource",
          "AWS::ECS::ClusterCapacityProviderAssociations",
          "AWS::EFS::AccessPoint",
          "AWS::Glue::SchemaVersion",
          "AWS::SageMaker::ModelExplainabilityJobDefinition",
          "AWS::XRay::Group",
          "AWS::CloudFront::KeyGroup",
          "AWS::DAX::SubnetGroup",
          "AWS::SageMaker::Domain",
          "AWS::ServiceCatalogAppRegistry::ResourceAssociation",
          "AWS::KinesisAnalyticsV2::ApplicationOutput",
          "AWS::CloudFormation::CustomResource",
          "AWS::ECS::PrimaryTaskSet",
          "AWS::ElastiCache::SecurityGroup",
          "AWS::Glue::Classifier",
          "AWS::Greengrass::FunctionDefinition",
          "AWS::IoT::TopicRule",
          "AWS::IoTCoreDeviceAdvisor::SuiteDefinition",
          "AWS::MSK::Cluster",
          "AWS::MediaConvert::Queue",
          "AWS::EC2::ClientVpnEndpoint",
          "AWS::SecretsManager::SecretTargetAttachment",
          "AWS::WAF::XssMatchSet",
          "AWS::WAFRegional::WebACL",
          "AWS::ApiGatewayV2::IntegrationResponse",
          "AWS::DataBrew::Dataset",
          "AWS::GuardDuty::IPSet",
          "AWS::Kendra::Index",
          "AWS::Pinpoint::Segment",
          "AWS::WAFRegional::GeoMatchSet",
          "AWS::NimbleStudio::Studio",
          "AWS::Amplify::App",
          "AWS::Backup::BackupPlan",
          "AWS::CE::AnomalyMonitor",
          "AWS::CodeGuruProfiler::ProfilingGroup",
          "AWS::Detective::MemberInvitation",
          "AWS::EC2::TransitGatewayRoute",
          "AWS::LakeFormation::Permissions",
          "AWS::WAF::WebACL",
          "AWS::ImageBuilder::DistributionConfiguration",
          "AWS::IoT::ProvisioningTemplate",
          "AWS::Macie::CustomDataIdentifier",
          "AWS::Neptune::DBParameterGroup",
          "AWS::SSM::Association",
          "AWS::WAFRegional::SizeConstraintSet",
          "AWS::AppStream::DirectoryConfig",
          "AWS::CloudFront::Distribution",
          "AWS::CodeArtifact::Repository",
          "AWS::EFS::FileSystem",
          "AWS::Greengrass::ResourceDefinition",
          "AWS::IAM::User",
          "AWS::SES::ConfigurationSet",
          "AWS::SageMaker::ImageVersion",
          "AWS::Budgets::Budget",
          "AWS::EC2::CarrierGateway",
          "AWS::EC2::EC2Fleet",
          "AWS::FraudDetector::EventType",
          "AWS::IAM::UserToGroupAddition",
          "AWS::KMS::Key",
          "AWS::QuickSight::Theme",
          "AWS::Synthetics::Canary",
          "AWS::DataSync::LocationFSxWindows",
          "AWS::EC2::VolumeAttachment",
          "AWS::Lambda::CodeSigningConfig",
          "AWS::RoboMaker::SimulationApplicationVersion",
          "AWS::SSM::MaintenanceWindowTarget",
          "AWS::CodeCommit::Repository",
          "AWS::Cognito::IdentityPoolRoleAttachment",
          "AWS::DirectoryService::SimpleAD",
          "AWS::Glue::Crawler",
          "AWS::Greengrass::ResourceDefinitionVersion",
          "AWS::GuardDuty::Detector",
          "AWS::SageMaker::MonitoringSchedule",
          "AWS::EC2::SubnetNetworkAclAssociation",
          "AWS::RDS::DBSecurityGroupIngress",
          "AWS::ServiceCatalog::ServiceAction",
          "AWS::WAFRegional::XssMatchSet",
          "AWS::ServiceCatalogAppRegistry::AttributeGroup",
          "AWS::ApiGateway::Stage",
          "AWS::AppStream::StackUserAssociation",
          "AWS::AuditManager::Assessment",
          "AWS::Batch::JobDefinition",
          "AWS::Config::AggregationAuthorization",
          "AWS::Logs::QueryDefinition",
          "AWS::Pinpoint::GCMChannel",
          "AWS::EC2::Subnet",
          "AWS::SageMaker::Device",
          "AWS::SageMaker::ModelPackageGroup",
          "AWS::SageMaker::NotebookInstance",
          "AWS::SageMaker::NotebookInstanceLifecycleConfig",
          "AWS::CloudWatch::Dashboard",
          "AWS::EC2::ClientVpnRoute",
          "AWS::GameLift::MatchmakingConfiguration",
          "AWS::ManagedBlockchain::Member",
          "AWS::RDS::GlobalCluster",
          "AWS::SES::ContactList",
          "AWS::EC2::SubnetCidrBlock",
          "AWS::ElastiCache::CacheCluster",
          "AWS::IVS::Channel",
          "AWS::IoTWireless::Destination",
          "AWS::LicenseManager::Grant",
          "AWS::ServiceCatalog::ResourceUpdateConstraint",
          "AWS::ServiceCatalog::CloudFormationProduct",
          "AWS::AppMesh::VirtualNode",
          "AWS::EC2::NetworkInterfacePermission",
          "AWS::EC2::TransitGatewayMulticastDomainAssociation",
          "AWS::ECR::PublicRepository",
          "AWS::IAM::Policy",
          "AWS::IAM::VirtualMFADevice",
          "AWS::MediaLive::Channel",
          "AWS::Budgets::BudgetsAction",
          "AWS::DocDB::DBClusterParameterGroup",
          "AWS::EC2::TransitGatewayRouteTable",
          "AWS::Kendra::Faq",
          "AWS::AppConfig::HostedConfigurationVersion",
          "AWS::CloudFormation::ModuleDefaultVersion",
          "AWS::ECR::RegistryPolicy",
          "AWS::Location::PlaceIndex",
          "AWS::OpsWorks::Layer",
          "AWS::S3Outposts::AccessPoint",
          "AWS::ApiGateway::Method",
          "AWS::EKS::Nodegroup",
          "AWS::IoT1Click::Project",
          "AWS::LookoutMetrics::AnomalyDetector",
          "AWS::SSM::Parameter",
          "AWS::SageMaker::Model",
          "AWS::DevOpsGuru::ResourceCollection",
          "AWS::Route53Resolver::ResolverQueryLoggingConfig",
          "AWS::AppIntegrations::EventIntegration",
          "AWS::AppMesh::VirtualService",
          "AWS::EC2::TrafficMirrorFilter",
          "AWS::IAM::SAMLProvider",
          "AWS::IoT1Click::Placement",
          "AWS::IoT::AccountAuditConfiguration",
          "AWS::ResourceGroups::Group",
          "AWS::SageMaker::Pipeline",
          "AWS::ServiceCatalog::ServiceActionAssociation",
          "AWS::ServiceCatalog::TagOptionAssociation",
          "AWS::IAM::Group",
          "AWS::NetworkFirewall::RuleGroup",
          "AWS::OpsWorks::UserProfile",
          "AWS::SSMContacts::ContactChannel",
          "AWS::ApiGatewayV2::RouteResponse",
          "AWS::CloudWatch::AnomalyDetector",
          "AWS::Glue::Trigger",
          "AWS::ImageBuilder::InfrastructureConfiguration",
          "AWS::QuickSight::Template",
          "AWS::ApiGateway::UsagePlan",
          "AWS::CodeArtifact::Domain",
          "AWS::FinSpace::Environment",
          "AWS::ServiceDiscovery::PrivateDnsNamespace",
          "AWS::Events::ApiDestination",
          "AWS::Greengrass::GroupVersion",
          "AWS::Logs::LogGroup",
          "AWS::Neptune::DBClusterParameterGroup",
          "AWS::SageMaker::FeatureGroup",
          "AWS::ServiceCatalog::LaunchNotificationConstraint",
          "AWS::ApiGatewayV2::Authorizer",
          "AWS::Events::Archive",
          "AWS::GuardDuty::Master",
          "AWS::Pinpoint::SMSChannel",
          "AWS::Transfer::User",
          "AWS::RoboMaker::SimulationApplication",
          "AWS::DynamoDB::Table",
          "AWS::ElastiCache::User",
          "AWS::FMS::NotificationChannel",
          "AWS::IoTEvents::DetectorModel",
          "AWS::MediaPackage::PackagingConfiguration",
          "AWS::Pinpoint::VoiceChannel",
          "AWS::RoboMaker::Robot",
          "AWS::Route53Resolver::FirewallDomainList",
          "AWS::SNS::Topic",
          "AWS::SES::Template",
          "AWS::CE::AnomalySubscription",
          "AWS::DAX::Cluster",
          "AWS::DataBrew::Job",
          "AWS::LookoutVision::Project",
          "AWS::MediaLive::Input",
          "AWS::Redshift::ClusterParameterGroup",
          "AWS::Route53::HostedZone",
          "AWS::WAFRegional::SqlInjectionMatchSet",
          "AWS::ApplicationAutoScaling::ScalingPolicy",
          "AWS::DLM::LifecyclePolicy",
          "AWS::GameLift::Script",
          "AWS::OpsWorks::Instance",
          "AWS::QuickSight::Dashboard",
          "AWS::ServiceCatalog::LaunchRoleConstraint",
          "AWS::Timestream::Table",
          "AWS::Config::ConfigurationAggregator",
          "AWS::DocDB::DBCluster",
          "AWS::EC2::Host",
          "AWS::IAM::ServiceLinkedRole",
          "AWS::IoTAnalytics::Channel",
          "AWS::MediaPackage::OriginEndpoint",
          "AWS::ServiceCatalog::LaunchTemplateConstraint",
          "AWS::ServiceCatalogAppRegistry::AttributeGroupAssociation",
          "AWS::CloudFront::CloudFrontOriginAccessIdentity",
          "AWS::CloudWatch::InsightRule",
          "AWS::EC2::NetworkInsightsPath",
          "AWS::EKS::Cluster",
          "AWS::IAM::AccessKey",
          "AWS::RDS::DBSecurityGroup",
          "AWS::RDS::OptionGroup",
          "AWS::WAFv2::RuleGroup",
          "AWS::AutoScaling::LifecycleHook",
          "AWS::AutoScaling::WarmPool",
          "AWS::EC2::NetworkAclEntry",
          "AWS::IoTSiteWise::AccessPolicy",
          "AWS::Macie::FindingsFilter",
          "AWS::MediaPackage::PackagingGroup",
          "AWS::CodeDeploy::DeploymentGroup",
          "AWS::IoTFleetHub::Application",
          "AWS::Kendra::DataSource",
          "AWS::KinesisFirehose::DeliveryStream",
          "AWS::EC2::DHCPOptions",
          "AWS::EC2::PlacementGroup",
          "AWS::EC2::RouteTable",
          "AWS::Glue::Connection",
          "AWS::IoT::Thing",
          "AWS::Neptune::DBSubnetGroup",
          "AWS::QLDB::Ledger",
          "AWS::RDS::DBInstance",
          "AWS::ACMPCA::Certificate",
          "AWS::AccessAnalyzer::Analyzer",
          "AWS::ApiGateway::Resource",
          "AWS::CustomerProfiles::Domain",
          "AWS::EC2::SecurityGroupEgress",
          "AWS::GroundStation::DataflowEndpointGroup",
          "AWS::MediaConnect::FlowOutput",
          "AWS::Route53::HealthCheck",
          "AWS::S3ObjectLambda::AccessPointPolicy",
          "AWS::SNS::TopicPolicy",
          "AWS::GameLift::Alias",
          "AWS::NetworkFirewall::Firewall",
          "AWS::Batch::JobQueue",
          "AWS::Chatbot::SlackChannelConfiguration",
          "AWS::EC2::NetworkInterfaceAttachment",
          "AWS::EC2::Route",
          "AWS::EMR::SecurityConfiguration",
          "AWS::Location::RouteCalculator",
          "AWS::MediaConvert::JobTemplate",
          "AWS::AppRunner::Service",
          "AWS::IoTSiteWise::Project",
          "AWS::Cognito::UserPoolRiskConfigurationAttachment",
          "AWS::EC2::NatGateway",
          "AWS::KMS::Alias",
          "AWS::Kinesis::Stream",
          "AWS::NetworkManager::Site",
          "AWS::SDB::Domain",
          "AWS::SecretsManager::Secret",
          "AWS::SES::ConfigurationSetEventDestination",
          "AWS::ApiGatewayV2::Model",
          "AWS::EC2::TransitGatewayConnect",
          "AWS::EventSchemas::Registry",
          "AWS::Events::Connection",
          "AWS::FraudDetector::EntityType",
          "AWS::Glue::Registry",
          "AWS::IAM::ServerCertificate",
          "AWS::SQS::Queue",
          "AWS::ApiGateway::RestApi",
          "AWS::AppMesh::Mesh",
          "AWS::FMS::Policy",
          "AWS::OpsWorks::App",
          "AWS::WAFv2::IPSet",
          "AWS::AppFlow::ConnectorProfile",
          "AWS::CloudFormation::ResourceDefaultVersion",
          "AWS::EC2::TransitGateway",
          "AWS::Logs::LogStream",
          "AWS::ServiceDiscovery::PublicDnsNamespace",
          "AWS::WAFv2::WebACLAssociation",
          "AWS::AppConfig::ConfigurationProfile",
          "AWS::EC2::VPCCidrBlock",
          "AWS::EC2::VPNConnection",
          "AWS::ElasticLoadBalancingV2::ListenerRule",
          "AWS::Events::EventBus",
          "AWS::OpsWorks::ElasticLoadBalancerAttachment",
          "AWS::OpsWorksCM::Server",
          "AWS::Signer::SigningProfile",
          "AWS::EC2::NetworkInterface",
          "AWS::Events::EventBusPolicy",
          "AWS::Logs::MetricFilter",
          "AWS::Macie::Session",
          "AWS::Neptune::DBInstance",
          "AWS::ServiceDiscovery::Instance",
          "AWS::ServiceDiscovery::Service",
          "AWS::WAF::SizeConstraintSet",
          "AWS::ApiGateway::Deployment",
          "AWS::EC2::InternetGateway",
          "AWS::LakeFormation::DataLakeSettings",
          "AWS::LookoutMetrics::Alert",
          "AWS::SageMaker::AppImageConfig",
          "AWS::CloudWatch::CompositeAlarm",
          "AWS::DMS::Endpoint",
          "AWS::DynamoDB::GlobalTable",
          "AWS::EC2::LocalGatewayRouteTableVPCAssociation",
          "AWS::EC2::VPNGatewayRoutePropagation",
          "AWS::Greengrass::CoreDefinition",
          "AWS::Redshift::ClusterSecurityGroup",
          "AWS::CloudFormation::WaitCondition",
          "AWS::EC2::GatewayRouteTableAssociation",
          "AWS::IoT::Certificate",
          "AWS::NetworkManager::CustomerGatewayAssociation",
          "AWS::Batch::ComputeEnvironment",
          "AWS::GameLift::GameServerGroup",
          "AWS::RDS::DBProxyEndpoint",
          "AWS::Redshift::ClusterSecurityGroupIngress",
          "AWS::Route53Resolver::ResolverRuleAssociation",
          "AWS::SSM::PatchBaseline",
          "AWS::S3::AccessPoint",
          "AWS::ECS::CapacityProvider",
          "AWS::EMR::InstanceFleetConfig",
          "AWS::GuardDuty::ThreatIntelSet",
          "AWS::IoTAnalytics::Datastore",
          "AWS::NetworkManager::GlobalNetwork",
          "AWS::NimbleStudio::LaunchProfile",
          "AWS::Pinpoint::BaiduChannel",
          "AWS::ServiceDiscovery::HttpNamespace",
          "AWS::WAF::IPSet",
          "AWS::ServiceCatalog::Portfolio",
          "AWS::ApiGatewayV2::Api",
          "AWS::ApiGatewayV2::Route",
          "AWS::Config::StoredQuery",
          "AWS::ECS::Service",
          "AWS::LakeFormation::Resource",
          "AWS::RDS::DBProxy",
          "AWS::S3::Bucket",
          "AWS::AppConfig::Deployment",
          "AWS::CodeDeploy::DeploymentConfig",
          "AWS::CodePipeline::Webhook",
          "AWS::DataSync::LocationS3",
          "AWS::MediaStore::Container",
          "AWS::Pinpoint::PushTemplate",
          "AWS::IoT::CustomMetric",
          "AWS::IoT::DomainConfiguration",
          "AWS::Location::TrackerConsumer",
          "AWS::MediaConnect::FlowVpcInterface",
          "AWS::Signer::ProfilePermission",
          "AWS::DevOpsGuru::NotificationChannel",
          "AWS::SNS::Subscription",
          "AWS::SageMaker::Project",
          "AWS::Lambda::EventSourceMapping",
          "AWS::ApiGateway::BasePathMapping",
          "AWS::AutoScalingPlans::ScalingPlan",
          "AWS::EC2::TrafficMirrorFilterRule",
          "AWS::EFS::MountTarget",
          "AWS::ElasticLoadBalancingV2::LoadBalancer",
          "AWS::IoTWireless::WirelessDevice",
          "AWS::KinesisAnalytics::Application",
          "AWS::S3::StorageLens",
          "AWS::WAFv2::WebACL",
          "AWS::AutoScaling::ScalingPolicy",
          "AWS::Config::OrganizationConformancePack",
          "AWS::Greengrass::CoreDefinitionVersion",
          "AWS::Inspector::ResourceGroup",
          "AWS::IoTSiteWise::Gateway",
          "AWS::DMS::EventSubscription",
          "AWS::Greengrass::ConnectorDefinitionVersion",
          "AWS::ServiceCatalog::PortfolioProductAssociation",
          "AWS::Config::OrganizationConfigRule",
          "AWS::GameLift::GameSessionQueue",
          "AWS::DataSync::Agent",
          "AWS::EC2::NetworkInsightsAnalysis",
          "AWS::PinpointEmail::ConfigurationSetEventDestination",
          "AWS::Route53Resolver::FirewallRuleGroup",
          "AWS::EC2::ClientVpnAuthorizationRule",
          "AWS::EC2::EnclaveCertificateIamRoleAssociation",
          "AWS::EC2::PrefixList",
          "AWS::EC2::TransitGatewayMulticastGroupMember",
          "AWS::Lambda::EventInvokeConfig",
          "AWS::MediaConnect::Flow",
          "AWS::RAM::ResourceShare",
          "AWS::Route53Resolver::ResolverQueryLoggingConfigAssociation",
          "AWS::IoT::Dimension",
          "AWS::ECR::ReplicationConfiguration",
          "AWS::FraudDetector::Variable",
          "AWS::ImageBuilder::ContainerRecipe",
          "AWS::NimbleStudio::StudioComponent",
          "AWS::SageMaker::App",
          "AWS::StepFunctions::Activity",
          "AWS::CloudFront::CachePolicy",
          "AWS::DMS::ReplicationSubnetGroup",
          "AWS::DMS::ReplicationTask",
          "AWS::ElasticLoadBalancing::LoadBalancer",
          "AWS::Greengrass::FunctionDefinitionVersion",
          "AWS::GuardDuty::Filter",
          "AWS::Location::GeofenceCollection",
          "AWS::AppConfig::Environment",
          "AWS::CodeStar::GitHubRepository",
          "AWS::GreengrassV2::ComponentVersion",
          "AWS::NetworkManager::TransitGatewayRegistration",
          "AWS::OpsWorks::Stack",
          "AWS::ApplicationInsights::Application",
          "AWS::Cognito::UserPoolUser",
          "AWS::EC2::TransitGatewayPeeringAttachment",
          "AWS::EC2::VPCPeeringConnection",
          "AWS::IVS::StreamKey",
          "AWS::ImageBuilder::Image",
          "AWS::Location::Map",
          "AWS::ServiceCatalog::CloudFormationProvisionedProduct",
          "AWS::IoTWireless::PartnerAccount",
          "AWS::Athena::DataCatalog",
          "AWS::CE::CostCategory",
          "AWS::CloudFormation::Macro",
          "AWS::Cognito::UserPoolUserToGroupAttachment",
          "AWS::EC2::TransitGatewayAttachment",
          "AWS::ElasticBeanstalk::ApplicationVersion",
          "AWS::Greengrass::DeviceDefinition",
          "AWS::WAFRegional::RateBasedRule",
          "AWS::AppSync::Resolver",
          "AWS::DataBrew::Project",
          "AWS::DataSync::Task",
          "AWS::EC2::Instance",
          "AWS::EC2::VPCEndpointConnectionNotification",
          "AWS::SecurityHub::Hub",
          "AWS::EC2::TransitGatewayRouteTablePropagation",
          "AWS::Lambda::Version",
          "AWS::SageMaker::Workteam",
          "AWS::ElasticLoadBalancingV2::TargetGroup",
          "AWS::GuardDuty::Member",
          "AWS::Inspector::AssessmentTarget",
          "AWS::ManagedBlockchain::Node",
          "AWS::AppStream::ImageBuilder",
          "AWS::EC2::TransitGatewayMulticastGroupSource",
          "AWS::EC2::EIP",
          "AWS::Route53::RecordSetGroup",
          "AWS::SES::ReceiptRuleSet",
          "AWS::AppStream::Fleet",
          "AWS::CodeStarNotifications::NotificationRule",
          "AWS::EC2::VPCGatewayAttachment",
          "AWS::Glue::DataCatalogEncryptionSettings",
          "AWS::IoT::PolicyPrincipalAttachment",
          "AWS::SSO::Assignment",
          "AWS::Redshift::ClusterSubnetGroup",
          "AWS::ApiGateway::DocumentationVersion",
          "AWS::AppMesh::VirtualRouter",
          "AWS::CUR::ReportDefinition",
          "AWS::CodeStarConnections::Connection",
          "AWS::Cognito::UserPoolIdentityProvider",
          "AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption",
          "AWS::Pinpoint::EmailTemplate",
          "AWS::Route53Resolver::FirewallRuleGroupAssociation",
          "AWS::SSM::ResourceDataSync",
          "AWS::Cassandra::Table",
          "AWS::ImageBuilder::Component",
          "AWS::IoTAnalytics::Pipeline",
          "AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource",
          "AWS::WAFv2::RegexPatternSet",
          "AWS::AppSync::ApiCache",
          "AWS::CodeBuild::ReportGroup",
          "AWS::FSx::FileSystem",
          "AWS::Glue::SecurityConfiguration",
          "AWS::IoTSiteWise::Portal",
          "AWS::KinesisAnalytics::ApplicationOutput",
          "AWS::WAFRegional::Rule",
          "AWS::Cognito::UserPoolDomain",
          "AWS::CustomerProfiles::ObjectType",
          "AWS::EMRContainers::VirtualCluster",
          "AWS::GlobalAccelerator::Accelerator",
          "AWS::ImageBuilder::ImageRecipe",
          "AWS::S3Outposts::Bucket",
          "AWS::S3Outposts::BucketPolicy",
          "AWS::Cloud9::EnvironmentEC2",
          "AWS::CloudWatch::Alarm",
          "AWS::GameLift::Build",
          "AWS::IAM::ManagedPolicy",
          "AWS::IoTSiteWise::AssetModel",
          "AWS::SES::ReceiptRule",
          "AWS::SecretsManager::ResourcePolicy",
          "AWS::ApiGatewayV2::VpcLink",
          "AWS::Elasticsearch::Domain",
          "AWS::IoTAnalytics::Dataset",
          "AWS::MediaLive::InputSecurityGroup",
          "AWS::Pinpoint::ApplicationSettings",
          "AWS::Timestream::Database",
          "AWS::SageMaker::ModelQualityJobDefinition",
          "AWS::ApiGateway::DocumentationPart",
          "AWS::AutoScaling::LaunchConfiguration",
          "AWS::Backup::BackupSelection",
          "AWS::ECS::Cluster",
          "AWS::EKS::Addon",
          "AWS::FIS::ExperimentTemplate",
          "AWS::IAM::InstanceProfile",
          "AWS::ServiceCatalog::AcceptedPortfolioShare",
          "AWS::AutoScaling::AutoScalingGroup",
          "AWS::EventSchemas::Discoverer",
          "AWS::GlobalAccelerator::EndpointGroup",
          "AWS::SSO::InstanceAccessControlAttributeConfiguration",
          "AWS::WAF::Rule",
          "AWS::AmazonMQ::Configuration",
          "AWS::Amplify::Domain",
          "AWS::AppConfig::DeploymentStrategy",
          "AWS::EC2::ClientVpnTargetNetworkAssociation",
          "AWS::EC2::LocalGatewayRoute",
          "AWS::QuickSight::DataSource",
          "AWS::SQS::QueuePolicy",
          "AWS::CloudFormation::StackSet",
          "AWS::EC2::CustomerGateway",
          "AWS::ElastiCache::ParameterGroup",
          "AWS::MWAA::Environment",
          "AWS::NetworkManager::Device",
          "AWS::WorkSpaces::Workspace",
          "AWS::AppStream::StackFleetAssociation",
          "AWS::EMR::Studio",
          "AWS::ElastiCache::ReplicationGroup",
          "AWS::RDS::DBParameterGroup",
          "AWS::SSM::MaintenanceWindowTask",
          "AWS::ApiGateway::ApiKey",
          "AWS::ApiGateway::Model",
          "AWS::Athena::WorkGroup",
          "AWS::CustomerProfiles::Integration",
          "AWS::ElastiCache::SecurityGroupIngress",
          "AWS::Pinpoint::Campaign",
          "AWS::IoT::ScheduledAudit",
          "AWS::ApiGatewayV2::Integration",
          "AWS::ApiGatewayV2::Stage",
          "AWS::Cognito::UserPoolResourceServer",
          "AWS::Config::ConformancePack",
          "AWS::DataBrew::Recipe",
          "AWS::DataSync::LocationSMB",
          "AWS::Greengrass::LoggerDefinition",
          "AWS::CloudFormation::ResourceVersion",
          "AWS::CloudWatch::MetricStream",
          "AWS::FraudDetector::Label",
          "AWS::NetworkManager::LinkAssociation",
          "AWS::Pinpoint::SmsTemplate",
          "AWS::QuickSight::DataSet",
          "AWS::ApiGateway::DomainName",
          "AWS::EC2::EIPAssociation",
          "AWS::Glue::Job",
          "AWS::Glue::Workflow",
          "AWS::Kinesis::StreamConsumer",
          "AWS::Route53Resolver::ResolverEndpoint",
          "Alexa::ASK::Skill",
          "AWS::DataBrew::Schedule",
          "AWS::CloudFront::PublicKey",
          "AWS::Config::ConfigRule",
          "AWS::EC2::VPNConnectionRoute",
          "AWS::ElasticBeanstalk::Application",
          "AWS::IoT::TopicRuleDestination",
          "AWS::RoboMaker::RobotApplication",
          "AWS::Route53::KeySigningKey",
          "AWS::Greengrass::ConnectorDefinition",
          "AWS::IoTWireless::WirelessGateway",
          "AWS::KinesisAnalyticsV2::Application",
          "AWS::CloudFront::Function",
          "AWS::DataPipeline::Pipeline",
          "AWS::ElasticBeanstalk::ConfigurationTemplate",
          "AWS::GameLift::Fleet",
          "AWS::IoT::SecurityProfile",
          "AWS::CloudFormation::ModuleVersion",
          "AWS::Lambda::Function",
          "AWS::RDS::DBClusterParameterGroup",
          "AWS::Route53::DNSSEC",
          "AWS::SSMIncidents::ResponsePlan",
          "AWS::AppMesh::VirtualGateway",
          "AWS::Backup::BackupVault",
          "AWS::CodePipeline::CustomActionType",
          "AWS::DataSync::LocationObjectStorage",
          "AWS::EC2::VPNGateway",
          "AWS::ECS::TaskSet",
          "AWS::PinpointEmail::ConfigurationSet",
          "AWS::ServiceCatalog::PortfolioPrincipalAssociation",
          "AWS::AppSync::GraphQLSchema",
          "AWS::DMS::Certificate",
          "AWS::Detective::Graph",
          "AWS::EC2::VPC",
          "AWS::Logs::SubscriptionFilter",
          "AWS::MediaPackage::Asset",
          "AWS::Pinpoint::APNSSandboxChannel",
          "AWS::Config::ConfigurationRecorder",
          "AWS::DirectoryService::MicrosoftAD",
          "AWS::EMR::StudioSessionMapping",
          "AWS::IoTEvents::Input",
          "AWS::Pinpoint::EventStream",
          "AWS::PinpointEmail::DedicatedIpPool",
          "AWS::SSMIncidents::ReplicationSet",
          "AWS::CloudFormation::WaitConditionHandle",
          "AWS::Cognito::UserPoolGroup",
          "AWS::GroundStation::Config",
          "AWS::NimbleStudio::StreamingImage",
          "AWS::SSMContacts::Contact",
          "AWS::WAF::SqlInjectionMatchSet",
          "AWS::AppStream::User",
          "AWS::DataSync::LocationNFS",
          "AWS::ImageBuilder::ImagePipeline",
          "AWS::MediaConnect::FlowSource",
          "AWS::Pinpoint::EmailChannel",
          "AWS::S3::BucketPolicy",
          "AWS::SageMaker::UserProfile",
          "AWS::EC2::CapacityReservation",
          "AWS::EC2::VPCEndpointServicePermissions",
          "AWS::ECR::Repository",
          "AWS::IVS::RecordingConfiguration",
          "AWS::KinesisAnalytics::ApplicationReferenceDataSource",
          "AWS::CloudFormation::Stack",
          "AWS::Greengrass::DeviceDefinitionVersion",
          "AWS::SSM::MaintenanceWindow",
          "AWS::AutoScaling::ScheduledAction",
          "AWS::EventSchemas::RegistryPolicy",
          "AWS::Transfer::Server",
          "AWS::ApiGateway::RequestValidator",
          "AWS::AppMesh::Route",
          "AWS::CertificateManager::Account",
          "AWS::Greengrass::SubscriptionDefinitionVersion",
          "AWS::IoT::Authorizer",
          "AWS::Lambda::Alias",
          "AWS::Config::DeliveryChannel",
          "AWS::EC2::TransitGatewayRouteTableAssociation",
          "AWS::IoTSiteWise::Asset",
          "AWS::NetworkFirewall::FirewallPolicy",
          "AWS::Route53Resolver::ResolverDNSSECConfig",
          "AWS::Cognito::UserPoolClient",
          "AWS::Location::Tracker",
          "AWS::RDS::DBProxyTargetGroup",
          "AWS::EC2::SecurityGroupIngress",
          "AWS::Lambda::LayerVersion",
          "AWS::Lambda::LayerVersionPermission",
          "AWS::SageMaker::ModelBiasJobDefinition",
          "AWS::WorkSpaces::ConnectionAlias",
          "AWS::Route53::RecordSet",
          "AWS::ApiGateway::VpcLink",
          "AWS::ApiGatewayV2::DomainName",
          "AWS::FraudDetector::Detector",
          "AWS::NetworkFirewall::LoggingConfiguration",
          "AWS::NetworkManager::Link",
          "AWS::Pinpoint::APNSChannel",
          "AWS::QuickSight::Analysis",
          "AWS::ServiceCatalog::TagOption",
          "AWS::CertificateManager::Certificate",
          "AWS::EC2::VPCDHCPOptionsAssociation",
          "AWS::ElastiCache::UserGroup",
          "AWS::ElasticBeanstalk::Environment",
          "AWS::LicenseManager::License",
          "AWS::StepFunctions::StateMachine",
          "AWS::AppFlow::Flow",
          "AWS::Athena::NamedQuery",
          "AWS::DocDB::DBSubnetGroup",
          "AWS::EC2::SpotFleet",
          "AWS::EC2::VPCEndpointService",
          "AWS::ElastiCache::SubnetGroup",
          "AWS::SageMaker::EndpointConfig",
          "AWS::AppSync::ApiKey",
          "AWS::EC2::TransitGatewayMulticastDomain",
          "AWS::EC2::VPCEndpoint",
          "AWS::Redshift::Cluster",
          "AWS::Route53Resolver::ResolverRule",
          "AWS::SSO::PermissionSet",
          "AWS::WAFRegional::WebACLAssociation",
          "AWS::WAFRegional::RegexPatternSet",
          "AWS::CodeDeploy::Application",
          "AWS::CodeGuruReviewer::RepositoryAssociation",
          "AWS::EC2::EgressOnlyInternetGateway",
          "AWS::GlobalAccelerator::Listener",
          "AWS::Glue::MLTransform",
          "AWS::IVS::PlaybackKeyPair",
          "AWS::RDS::DBSubnetGroup"
        ]
      },
      "AttributeOperator": {
        "type": "string",
        "enum": [
          "within",
          "equals",
          "not_equals",
          "regex_match",
          "not_regex_match",
          "greater_than",
          "greater_than_or_equal",
          "less_than",
          "less_than_or_equal",
          "exists",
          "not_exists",
          "contains",
          "not_contains",
          "starting_with",
          "not_starting_with",
          "ending_with",
          "not_ending_with"
        ]
      },
      "AttributeQuery": {
        "properties": {
          "cond_type": {
            "type": "string",
            "enum": ["attribute"],
            "nullable": false
          },
          "resource_types": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/AwsResourceTypes" },
                    { "$ref": "#/components/schemas/GcpResourceTypes" },
                    { "$ref": "#/components/schemas/AzureResourceTypes" },
                    {
                      "$ref": "#/components/schemas/CloudFormationResourceTypes"
                    }
                  ]
                },
                "type": "array"
              },
              { "type": "string", "enum": ["all"] }
            ]
          },
          "attribute": { "type": "string" },
          "operator": { "$ref": "#/components/schemas/AttributeOperator" },
          "value": { "anyOf": [{ "type": "string" }, { "type": "boolean" }] }
        },
        "required": ["cond_type", "resource_types", "attribute", "operator"],
        "type": "object",
        "additionalProperties": false
      },
      "ConnectionQuery": {
        "properties": {
          "cond_type": {
            "type": "string",
            "enum": ["connection"],
            "nullable": false
          },
          "resource_types": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/AwsResourceTypes" },
                    { "$ref": "#/components/schemas/GcpResourceTypes" },
                    { "$ref": "#/components/schemas/AzureResourceTypes" },
                    {
                      "$ref": "#/components/schemas/CloudFormationResourceTypes"
                    }
                  ]
                },
                "type": "array"
              },
              { "type": "string", "enum": ["all"] }
            ]
          },
          "operator": { "type": "string", "enum": ["exists", "not_exists"] },
          "connected_resource_types": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    { "$ref": "#/components/schemas/AwsResourceTypes" },
                    { "$ref": "#/components/schemas/GcpResourceTypes" },
                    { "$ref": "#/components/schemas/AzureResourceTypes" },
                    {
                      "$ref": "#/components/schemas/CloudFormationResourceTypes"
                    }
                  ]
                },
                "type": "array"
              },
              { "type": "string", "enum": ["all"] }
            ]
          }
        },
        "required": [
          "cond_type",
          "resource_types",
          "operator",
          "connected_resource_types"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "FilterQuery": {
        "properties": {
          "cond_type": {
            "type": "string",
            "enum": ["filter"],
            "nullable": false
          },
          "attribute": {
            "type": "string",
            "enum": ["resource_type"],
            "nullable": false
          },
          "operator": {
            "type": "string",
            "enum": ["within"],
            "nullable": false
          },
          "value": { "items": { "type": "string" }, "type": "array" }
        },
        "required": ["cond_type", "attribute", "operator", "value"],
        "type": "object",
        "additionalProperties": false
      },
      "ComplexQuery": {
        "properties": {
          "or": {
            "items": {
              "anyOf": [
                { "$ref": "#/components/schemas/AttributeQuery" },
                { "$ref": "#/components/schemas/ConnectionQuery" },
                { "$ref": "#/components/schemas/FilterQuery" },
                { "$ref": "#/components/schemas/ComplexQuery" }
              ]
            },
            "type": "array"
          },
          "and": {
            "items": {
              "anyOf": [
                { "$ref": "#/components/schemas/AttributeQuery" },
                { "$ref": "#/components/schemas/ConnectionQuery" },
                { "$ref": "#/components/schemas/FilterQuery" },
                { "$ref": "#/components/schemas/ComplexQuery" }
              ]
            },
            "type": "array"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "PolicyDefinition": {
        "properties": {
          "metadata": { "$ref": "#/components/schemas/MetadataPolicy" },
          "scope": { "$ref": "#/components/schemas/ScopePolicy" },
          "definition": {
            "anyOf": [
              { "$ref": "#/components/schemas/AttributeQuery" },
              { "$ref": "#/components/schemas/ConnectionQuery" },
              { "$ref": "#/components/schemas/FilterQuery" },
              { "$ref": "#/components/schemas/ComplexQuery" }
            ]
          }
        },
        "required": ["metadata", "scope", "definition"],
        "type": "object",
        "additionalProperties": false
      },
      "PolicyCode": {
        "properties": { "code": { "type": "string" } },
        "required": ["code"],
        "type": "object",
        "additionalProperties": false
      },
      "PolicyValidation": {
        "anyOf": [
          { "$ref": "#/components/schemas/PolicyDefinition" },
          { "$ref": "#/components/schemas/PolicyCode" }
        ]
      },
      "BenchmarksIds": {
        "properties": {},
        "type": "object",
        "additionalProperties": {
          "items": { "type": "string" },
          "type": "array"
        }
      },
      "OrQuery": {
        "properties": {
          "or": {
            "items": { "$ref": "#/components/schemas/AttributeQuery" },
            "type": "array"
          }
        },
        "required": ["or"],
        "type": "object",
        "additionalProperties": false
      },
      "AndQuery": {
        "properties": {
          "and": {
            "items": {
              "anyOf": [
                { "$ref": "#/components/schemas/AttributeQuery" },
                { "$ref": "#/components/schemas/OrQuery" }
              ]
            },
            "type": "array"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "FrameworkType": {
        "type": "string",
        "enum": ["Terraform", "CloudFormation"]
      },
      "ProviderBigType": {
        "type": "string",
        "enum": ["AWS", "GCP", "Azure", "Kubernetes", "Docker", "DockerImage"]
      },
      "SeverityTypeBig": {
        "type": "string",
        "enum": ["CRITICAL", "HIGH", "MEDIUM", "LOW"]
      },
      "CategoryTypeBig": {
        "type": "string",
        "enum": [
          "Elasticsearch",
          "General",
          "IAM",
          "Logging",
          "Monitoring",
          "Networking",
          "Public",
          "Secrets",
          "Serverless",
          "Storage"
        ]
      },
      "Amount": {
        "properties": {
          "CLOSED": { "type": "number", "format": "double" },
          "DELETED": { "type": "number", "format": "double" },
          "OPEN": { "type": "number", "format": "double" },
          "REMEDIATED": { "type": "number", "format": "double" },
          "SUPPRESSED": { "type": "number", "format": "double" }
        },
        "required": ["CLOSED", "DELETED", "OPEN", "REMEDIATED", "SUPPRESSED"],
        "type": "object",
        "additionalProperties": false
      },
      "AccountData": {
        "properties": {
          "amounts": { "$ref": "#/components/schemas/Amount" },
          "lastUpdateDate": { "type": "string" }
        },
        "required": ["amounts", "lastUpdateDate"],
        "type": "object",
        "additionalProperties": false
      },
      "AccountsData": {
        "properties": {},
        "type": "object",
        "additionalProperties": { "$ref": "#/components/schemas/AccountData" }
      },
      "PoliciesTableData": {
        "properties": {
          "provider": { "$ref": "#/components/schemas/ProviderBigType" },
          "title": { "type": "string" },
          "severity": { "$ref": "#/components/schemas/SeverityTypeBig" },
          "category": { "$ref": "#/components/schemas/CategoryTypeBig" },
          "resourceTypes": {
            "items": {
              "anyOf": [
                { "$ref": "#/components/schemas/AwsResourceTypes" },
                { "$ref": "#/components/schemas/GcpResourceTypes" },
                { "$ref": "#/components/schemas/AzureResourceTypes" },
                { "$ref": "#/components/schemas/CloudFormationResourceTypes" }
              ]
            },
            "type": "array"
          },
          "guideline": { "type": "string" },
          "isCustom": { "type": "boolean" },
          "conditionQuery": {
            "anyOf": [
              { "$ref": "#/components/schemas/AttributeQuery" },
              { "$ref": "#/components/schemas/ConnectionQuery" },
              { "$ref": "#/components/schemas/FilterQuery" },
              { "$ref": "#/components/schemas/ComplexQuery" }
            ]
          },
          "createdBy": { "type": "string" },
          "code": { "type": "string" },
          "id": { "type": "string" },
          "accountsData": { "$ref": "#/components/schemas/AccountsData" },
          "benchmarks": { "$ref": "#/components/schemas/BenchmarksIds" }
        },
        "required": [
          "provider",
          "title",
          "severity",
          "category",
          "resourceTypes",
          "guideline",
          "isCustom",
          "conditionQuery",
          "id",
          "accountsData",
          "benchmarks"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "filters": {
        "properties": {
          "category": {
            "items": { "$ref": "#/components/schemas/CategoryTypeBig" },
            "type": "array"
          },
          "severity": {
            "items": { "$ref": "#/components/schemas/SeverityTypeBig" },
            "type": "array"
          },
          "resourceTypes": {
            "items": {
              "anyOf": [
                { "$ref": "#/components/schemas/AwsResourceTypes" },
                { "$ref": "#/components/schemas/AzureResourceTypes" },
                { "$ref": "#/components/schemas/GcpResourceTypes" },
                { "$ref": "#/components/schemas/CloudFormationResourceTypes" }
              ]
            },
            "type": "array"
          },
          "accounts": { "items": { "type": "string" }, "type": "array" },
          "benchmarks": { "items": { "type": "string" }, "type": "array" },
          "provider": {
            "items": { "$ref": "#/components/schemas/ProviderBigType" },
            "type": "array"
          },
          "createdBy": { "items": { "type": "string" }, "type": "array" }
        },
        "required": [
          "category",
          "severity",
          "resourceTypes",
          "accounts",
          "benchmarks",
          "provider",
          "createdBy"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "PoliciesTable": {
        "properties": {
          "data": {
            "items": { "$ref": "#/components/schemas/PoliciesTableData" },
            "type": "array"
          },
          "filters": { "$ref": "#/components/schemas/filters" }
        },
        "required": ["data", "filters"],
        "type": "object",
        "additionalProperties": false
      },
      "ErrorMessage": {
        "properties": { "message": { "type": "string" } },
        "required": ["message"],
        "type": "object",
        "additionalProperties": false
      },
      "PolicyRes": {
        "properties": { "policy": { "type": "string" } },
        "required": ["policy"],
        "type": "object",
        "additionalProperties": false
      },
      "newPolicy": {
        "properties": {
          "code": {
            "anyOf": [
              { "$ref": "#/components/schemas/PolicyDefinition" },
              { "type": "string" }
            ]
          },
          "title": { "type": "string", "description": "Policy title" },
          "guidelines": {
            "type": "string",
            "description": "Text that describes guidelines"
          },
          "category": { "$ref": "#/components/schemas/CategoryType" },
          "provider": { "$ref": "#/components/schemas/ProviderType" },
          "benchmarks": { "$ref": "#/components/schemas/BenchmarksIds" },
          "conditions": {
            "anyOf": [
              { "$ref": "#/components/schemas/AttributeQuery" },
              { "$ref": "#/components/schemas/ConnectionQuery" },
              { "$ref": "#/components/schemas/FilterQuery" },
              { "$ref": "#/components/schemas/ComplexQuery" }
            ]
          },
          "severity": { "$ref": "#/components/schemas/SeverityType" },
          "frameworks": {
            "items": { "$ref": "#/components/schemas/FrameworkType" },
            "type": "array"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "PreviewDataResults": {
        "properties": {
          "arn": { "type": "string" },
          "awsAccountId": { "type": "string" },
          "createdBy": { "type": "string" },
          "customerName": { "type": "string" },
          "file_path": { "type": "string" },
          "lines": {
            "items": { "type": "number", "format": "double" },
            "type": "array"
          },
          "resource": { "type": "string" },
          "source": { "type": "string" },
          "status": { "type": "string" },
          "code": { "type": "string" }
        },
        "required": [
          "arn",
          "awsAccountId",
          "createdBy",
          "customerName",
          "file_path",
          "lines",
          "resource",
          "source",
          "status",
          "code"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "policyPreviewResult": {
        "properties": {
          "token": { "type": "string" },
          "data": {
            "items": { "$ref": "#/components/schemas/PreviewDataResults" },
            "type": "array"
          }
        },
        "required": ["data"],
        "type": "object",
        "additionalProperties": false
      },
      "Scope": {
        "properties": {
          "provider": { "$ref": "#/components/schemas/ProviderType" }
        },
        "required": ["provider"],
        "type": "object",
        "additionalProperties": false
      },
      "QueryPreview": {
        "properties": {
          "query": {
            "anyOf": [
              { "$ref": "#/components/schemas/AttributeQuery" },
              { "$ref": "#/components/schemas/ConnectionQuery" },
              { "$ref": "#/components/schemas/FilterQuery" },
              { "$ref": "#/components/schemas/ComplexQuery" },
              { "$ref": "#/components/schemas/AndQuery" },
              { "$ref": "#/components/schemas/OrQuery" }
            ]
          },
          "resource_types": {
            "items": {
              "anyOf": [
                { "$ref": "#/components/schemas/AwsResourceTypes" },
                { "$ref": "#/components/schemas/AzureResourceTypes" },
                { "$ref": "#/components/schemas/GcpResourceTypes" },
                { "$ref": "#/components/schemas/CloudFormationResourceTypes" }
              ]
            },
            "type": "array"
          },
          "scope": { "$ref": "#/components/schemas/Scope" }
        },
        "required": ["query"],
        "type": "object",
        "additionalProperties": false
      },
      "PolicyPreviewDetails": {
        "properties": {
          "policy_preview": { "$ref": "#/components/schemas/QueryPreview" }
        },
        "required": ["policy_preview"],
        "type": "object",
        "additionalProperties": false
      },
      "PolicyPreviewBody": {
        "properties": {
          "token": {
            "type": "string",
            "description": "Token that you create if you want to preview multiple policies \nand match their preview responses \n"
          },
          "policy": { "$ref": "#/components/schemas/PolicyPreviewDetails" },
          "resultsNumber": {
            "type": "number",
            "format": "double",
            "description": "Maximum number of resources to include in the response"
          }
        },
        "required": ["policy"],
        "type": "object",
        "additionalProperties": false
      },
      "ResourcesSuppressionData": {
        "properties": {
          "id": { "type": "string" },
          "policyId": { "type": "string" },
          "creationDate": { "type": "string" },
          "comment": { "type": "string" },
          "suppressionType": {
            "type": "string",
            "enum": ["Resources"],
            "nullable": false
          },
          "resources": {
            "items": {
              "properties": {
                "id": { "type": "string" },
                "accountId": { "type": "string" },
                "resourceId": { "type": "string" }
              },
              "required": ["accountId", "resourceId"],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": [
          "id",
          "policyId",
          "comment",
          "suppressionType",
          "resources"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "AccountsSuppressionData": {
        "properties": {
          "id": { "type": "string" },
          "policyId": { "type": "string" },
          "creationDate": { "type": "string" },
          "comment": { "type": "string" },
          "suppressionType": {
            "type": "string",
            "enum": ["Accounts"],
            "nullable": false
          },
          "accountIds": { "items": { "type": "string" }, "type": "array" }
        },
        "required": [
          "id",
          "policyId",
          "comment",
          "suppressionType",
          "accountIds"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "PolicySuppressionData": {
        "properties": {
          "id": { "type": "string" },
          "policyId": { "type": "string" },
          "creationDate": { "type": "string" },
          "comment": { "type": "string" },
          "suppressionType": {
            "type": "string",
            "enum": ["Policy"],
            "nullable": false
          }
        },
        "required": ["id", "policyId", "comment", "suppressionType"],
        "type": "object",
        "additionalProperties": false
      },
      "TagsSuppressionData": {
        "properties": {
          "id": { "type": "string" },
          "policyId": { "type": "string" },
          "creationDate": { "type": "string" },
          "comment": { "type": "string" },
          "suppressionType": {
            "type": "string",
            "enum": ["Tags"],
            "nullable": false
          },
          "tags": {
            "items": {
              "properties": {
                "value": { "type": "string" },
                "key": { "type": "string" }
              },
              "required": ["value", "key"],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": ["id", "policyId", "comment", "suppressionType", "tags"],
        "type": "object",
        "additionalProperties": false
      },
      "Suppression": {
        "anyOf": [
          { "$ref": "#/components/schemas/ResourcesSuppressionData" },
          { "$ref": "#/components/schemas/AccountsSuppressionData" },
          { "$ref": "#/components/schemas/PolicySuppressionData" },
          { "$ref": "#/components/schemas/TagsSuppressionData" }
        ]
      },
      "ResourcesSuppressionCreate": {
        "properties": {
          "comment": { "type": "string", "description": "Justification" },
          "origin": { "type": "string", "description": "Value - **Platform**" },
          "expirationTime": {
            "type": "number",
            "format": "double",
            "description": "UNIX timestamp in milliseconds"
          },
          "suppressionType": {
            "type": "string",
            "enum": ["Resources"],
            "nullable": false
          },
          "resources": {
            "items": {
              "properties": {
                "id": { "type": "string" },
                "accountId": { "type": "string" }
              },
              "required": ["id", "accountId"],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": ["comment", "origin", "suppressionType", "resources"],
        "type": "object",
        "additionalProperties": false
      },
      "PolicySuppressionCreate": {
        "properties": {
          "comment": { "type": "string", "description": "Justification" },
          "origin": { "type": "string", "description": "Value - **Platform**" },
          "expirationTime": {
            "type": "number",
            "format": "double",
            "description": "UNIX timestamp in milliseconds"
          },
          "suppressionType": {
            "type": "string",
            "enum": ["Policy"],
            "nullable": false
          }
        },
        "required": ["comment", "origin", "suppressionType"],
        "type": "object",
        "additionalProperties": false
      },
      "AccountsSuppressionCreate": {
        "properties": {
          "comment": { "type": "string", "description": "Justification" },
          "origin": { "type": "string", "description": "Value - **Platform**" },
          "expirationTime": {
            "type": "number",
            "format": "double",
            "description": "UNIX timestamp in milliseconds"
          },
          "suppressionType": {
            "type": "string",
            "enum": ["Accounts"],
            "nullable": false
          },
          "accountIds": { "items": { "type": "string" }, "type": "array" }
        },
        "required": ["comment", "origin", "suppressionType", "accountIds"],
        "type": "object",
        "additionalProperties": false
      },
      "TagsSuppressionCreate": {
        "properties": {
          "comment": { "type": "string", "description": "Justification" },
          "origin": { "type": "string", "description": "Value - **Platform**" },
          "expirationTime": {
            "type": "number",
            "format": "double",
            "description": "UNIX timestamp in milliseconds"
          },
          "suppressionType": {
            "type": "string",
            "enum": ["Tags"],
            "nullable": false
          },
          "tags": {
            "items": {
              "properties": {
                "value": { "type": "string" },
                "key": { "type": "string" }
              },
              "required": ["value", "key"],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": ["comment", "origin", "suppressionType", "tags"],
        "type": "object",
        "additionalProperties": false
      },
      "SuppressionCreate": {
        "anyOf": [
          { "$ref": "#/components/schemas/ResourcesSuppressionCreate" },
          { "$ref": "#/components/schemas/PolicySuppressionCreate" },
          { "$ref": "#/components/schemas/AccountsSuppressionCreate" },
          { "$ref": "#/components/schemas/TagsSuppressionCreate" }
        ]
      },
      "ResourcesSuppressionJustificationData": {
        "properties": {
          "id": { "type": "string" },
          "policyId": { "type": "string" },
          "creationDate": { "type": "string" },
          "comment": { "type": "string" },
          "suppressionType": {
            "type": "string",
            "enum": ["Resources"],
            "nullable": false
          },
          "resources": { "items": { "type": "string" }, "type": "array" }
        },
        "required": [
          "id",
          "policyId",
          "comment",
          "suppressionType",
          "resources"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "SuppressionsJustifications": {
        "allOf": [
          {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResourcesSuppressionJustificationData"
              },
              { "$ref": "#/components/schemas/AccountsSuppressionData" },
              { "$ref": "#/components/schemas/PolicySuppressionData" },
              { "$ref": "#/components/schemas/TagsSuppressionData" }
            ]
          },
          {
            "properties": { "type": { "type": "string" } },
            "required": ["type"],
            "type": "object"
          }
        ]
      },
      "FileFixes": {
        "properties": {
          "filePath": { "type": "string" },
          "fixes": {
            "items": {
              "properties": {
                "fixedDefinition": { "type": "string" },
                "originalEndLine": { "type": "number", "format": "double" },
                "originalStartLine": { "type": "number", "format": "double" },
                "policyId": { "type": "string" },
                "resourceId": { "type": "string" }
              },
              "required": [
                "fixedDefinition",
                "originalEndLine",
                "originalStartLine",
                "policyId",
                "resourceId"
              ],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": ["filePath", "fixes"],
        "type": "object",
        "additionalProperties": false
      },
      "CheckovFileErrors": {
        "properties": {
          "filePath": {
            "type": "string",
            "description": "File path within repository"
          },
          "fileContent": {
            "type": "string",
            "description": "Content of the file on which the fix will be appiled"
          },
          "framework": {
            "type": "string",
            "description": "Framework on which the fix will be applied. Valid values are **terraform**, **cloudformation**          \n"
          },
          "errors": {
            "description": "Code error data",
            "items": {
              "properties": {
                "endLine": { "type": "number", "format": "double" },
                "startLine": { "type": "number", "format": "double" },
                "policyId": { "type": "string" },
                "resourceId": { "type": "string" }
              },
              "required": ["endLine", "startLine", "policyId", "resourceId"],
              "type": "object"
            },
            "type": "array"
          }
        },
        "required": ["filePath", "fileContent", "framework", "errors"],
        "type": "object",
        "additionalProperties": false
      },
      "RepositoriesResponse": {
        "properties": {
          "id": { "type": "string" },
          "repository": { "type": "string" },
          "source": { "type": "string" },
          "owner": { "type": "string" },
          "defaultBranch": { "type": "string" },
          "isPublic": { "type": "boolean" },
          "runs": { "type": "number", "format": "double" },
          "creationDate": { "type": "string" },
          "lastScanDate": { "type": "string" },
          "errors": { "type": "number", "format": "double" }
        },
        "required": ["id", "repository", "source", "owner", "runs"],
        "type": "object",
        "additionalProperties": false
      },
      "RepoIdToRepoName": {
        "properties": {
          "id": { "type": "string" },
          "repository": { "type": "string" }
        },
        "required": ["id", "repository"],
        "type": "object",
        "additionalProperties": false
      },
      "QueryRepositoriesRequest": {
        "properties": {
          "repositoriesIds": { "items": { "type": "string" }, "type": "array" }
        },
        "required": ["repositoriesIds"],
        "type": "object",
        "additionalProperties": false
      }
    }
  },
  "info": {
    "title": "Prisma Cloud Code Security API",
    "version": "Latest",
    "description": "The Prisma Cloud Code Security API enables you to check your Infrastructure-as-Code (IaC) templates\nagainst Prisma Cloud out-of-the-box and custom security policies.\n\nThe Code Security API enable you to: \n\n* Initiate Code Security scans of repositories you've added to Prisma Cloud\n* View the repositories you've connected to Code Security\n* Manage Code Security suppression rules \n* Fix or suppress Code Security policy violations\n\n\nSee [Prisma Cloud Code Security](https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-admin-code-security.html) \nfor more information.\n",
    "contact": {}
  },
  "openapi": "3.0.0",
  "paths": {
    "/code/api/v1/repositories": {
      "get": {
        "operationId": "getRepositories",
        "responses": {
          "200": {
            "description": "Respositories listed",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RepositoriesResponse"
                  },
                  "type": "array"
                },
                "examples": {
                  "Example 1": {
                    "value": [
                      {
                        "id": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",
                        "repository": "foo",
                        "source": "Github",
                        "owner": "yourname",
                        "defaultBranch": "master",
                        "isPublic": false,
                        "runs": 0,
                        "creationDate": "2022-02-21T12:37:56.188Z",
                        "lastScanDate": "null",
                        "errors": 0
                      },
                      {
                        "id": "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX",
                        "repository": "terragoat",
                        "source": "Github",
                        "owner": "yourname",
                        "defaultBranch": "master",
                        "isPublic": false,
                        "runs": 2,
                        "creationDate": "2022-02-21T09:26:22.848Z",
                        "lastScanDate": "2022-02-21T09:26:43.945Z",
                        "errors": 343
                      }
                    ]
                  }
                }
              }
            }
          },
          "422": { "description": "Request arguments not valid" },
          "500": { "description": "Could not retrieve repositories" }
        },
        "description": "Returns a list of repositories that are integrated with Prisma Cloud Code Security.",
        "summary": "List Repositories",
        "tags": ["Repositories"],
        "security": [{ "CustomAuthorizer": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "errorsCount",
            "description": "true = Include error counts",
            "required": false,
            "schema": { "type": "string" }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/repositories\"\n\nquerystring = {\"errorsCount\":\"SOME_STRING_VALUE\"}\n\nheaders = {\"authorization\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://api.prismacloud.io/code/api/v1/repositories?errorsCount=SOME_STRING_VALUE' \\\n  --header 'authorization: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/code/api/v1/repositories/query": {
      "post": {
        "operationId": "getQueryRepositories",
        "responses": {
          "200": {
            "description": "repositories mapping",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "items": {
                        "$ref": "#/components/schemas/RepoIdToRepoName"
                      },
                      "type": "array"
                    },
                    { "type": "string" }
                  ]
                },
                "examples": {
                  "Example 1": {
                    "value": [
                      {
                        "id": "17758008-49b2-46ad-9795-f5f6efb8492f",
                        "repository": "aws-cloud"
                      },
                      {
                        "id": "16df32d8-48ff-4dbd-8a6b-782fdfa6dbb3",
                        "repository": "CountTrees"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "description": "Returns a mapping of the given repository IDs with their correponding  repository names.",
        "summary": "Get Repository Name",
        "tags": ["Repositories"],
        "security": [{ "CustomAuthorizer": [] }],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryRepositoriesRequest"
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/repositories/query\"\n\npayload = {\"repositoriesIds\": [\"string\"]}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.prismacloud.io/code/api/v1/repositories/query \\\n  --header 'authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"repositoriesIds\":[\"string\"]}'"
          }
        ]
      }
    },
    "/code/api/v1/repositories/branches": {
      "get": {
        "operationId": "getBranches",
        "responses": {
          "200": {
            "description": "repository branches",
            "content": {
              "application/json": {
                "schema": {},
                "examples": {
                  "Example 1": {
                    "value": {
                      "source": "Gitlab",
                      "branches": [
                        {
                          "name": "some_branch",
                          "creationDate": "2021-07-13T14:22:53.964Z",
                          "defaultBranch": false
                        },
                        {
                          "name": "master",
                          "creationDate": null,
                          "defaultBranch": true
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Could not get branches, check query params"
          },
          "422": { "description": "Request arguments validation error" },
          "500": { "description": "Could not return repositories" }
        },
        "description": "Returns a list of the repositories branches you've added to  Prisma Cloud Code Security.  The returned branches are those that have at least one CI/CD run.\n\nYou can get repository owners and names through [List Repositories](/api/cloud/cspm/code-security#operation/getRepositories).",
        "summary": "Get Repository Branches",
        "tags": ["Repositories"],
        "security": [{ "CustomAuthorizer": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "repoOwner",
            "required": true,
            "description": "Repository owner",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "repoName",
            "required": true,
            "description": "Repository name",
            "schema": { "type": "string" }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/repositories/branches\"\n\nquerystring = {\"repoOwner\":\"SOME_STRING_VALUE\",\"repoName\":\"SOME_STRING_VALUE\"}\n\nheaders = {\"authorization\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://api.prismacloud.io/code/api/v1/repositories/branches?repoOwner=SOME_STRING_VALUE&repoName=SOME_STRING_VALUE' \\\n  --header 'authorization: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/code/api/v1/scans/integrations": {
      "post": {
        "operationId": "scanIntegrations",
        "responses": { "201": { "description": "Scan started" } },
        "description": "Initiates an asynchronous scan of all resources to refresh the Code Security state in Prisma Cloud.\n\nThe Code Security state identifies Code Security policy violations for resource in  code repositories that you've added to  [Prisma Cloud Code Security](https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-admin-code-security/get-started.html).",
        "summary": "Start A Scan",
        "tags": ["Scans"],
        "security": [{ "CustomAuthorizer": [] }],
        "parameters": [],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/scans/integrations\"\n\nheaders = {\"authorization\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"POST\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.prismacloud.io/code/api/v1/scans/integrations \\\n  --header 'authorization: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/code/api/v1/suppressions": {
      "get": {
        "operationId": "getSuppressions",
        "responses": {
          "200": {
            "description": "Returns all the suppressions",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/Suppression" },
                  "type": "array"
                },
                "examples": {
                  "Example 1": {
                    "value": [
                      {
                        "suppressionType": "Policy",
                        "id": "2684013d-43d0-401d-9bf2-74dc4df76386",
                        "policyId": "BC_GCP_LOGGING_1",
                        "creationDate": "2020-10-15T12:46:49.592Z",
                        "comment": "Policy is irrelevant."
                      },
                      {
                        "suppressionType": "Tags",
                        "id": "e1272e30-e231-4beb-b960-1bcb24c2834d",
                        "policyId": "BC_GCP_GCS_2",
                        "creationDate": "2021-01-08T23:00:47.674Z",
                        "comment": "Ignored.",
                        "tags": [{ "value": "knights", "key": "team" }]
                      },
                      {
                        "suppressionType": "Accounts",
                        "id": "13a5befb-ccaf-4bf8-83af-b1d8fd5c89f6",
                        "policyId": "BC_AZR_STORAGE_1",
                        "creationDate": "2020-12-24T13:22:20.086Z",
                        "comment": "No justification comment provided.",
                        "accountIds": ["bridgecrewio/terragoat"]
                      },
                      {
                        "suppressionType": "Resources",
                        "id": "b48476c4-062a-4091-a48d-040c14d7e809",
                        "policyId": "acme_AWS_1600118884127",
                        "creationDate": "2020-09-18T08:09:25.803Z",
                        "comment": "Dev env resources.",
                        "resources": [
                          {
                            "accountId": "bridgecrewio/terragoat",
                            "resourceId": "/terraform/aws/db-app.tf:aws_instance.db_app"
                          },
                          {
                            "accountId": "bridgecrewio/terragoat",
                            "resourceId": "/terraform/aws/ec2.tf:aws_instance.web_host"
                          },
                          {
                            "accountId": "bridgecrew/gitlab_terragoat",
                            "resourceId": "/terraform/aws/db-app.tf:aws_instance.db_app"
                          },
                          {
                            "accountId": "bridgecrew/gitlab_terragoat",
                            "resourceId": "/terraform/aws/ec2.tf:aws_instance.web_host"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "description": "\nReturns a list of suppression rules. Code Security will identify any resource \nthat meets the criteria of a suppression rule as **suppressed** even if the \nCode Security scan exposes the resource as an error or a misconfigured resource.\n\nThe possible suppression types are:\n\n* Policy - Suppress scan results for entire policy. \n* Account - Suppress scan results for resources in specific accounts or repositories.\n* Tags - Suppress scan results for resources with specific tags.\n* Resources - Suppress scan results resources by their resource IDs.\n",
        "summary": "List Suppression Rules",
        "tags": ["Suppressions"],
        "security": [{ "CustomAuthorizer": [] }],
        "parameters": [],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/suppressions\"\n\nheaders = {\"authorization\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/code/api/v1/suppressions \\\n  --header 'authorization: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/code/api/v1/suppressions/{policyId}": {
      "post": {
        "operationId": "createSuppression",
        "responses": {
          "200": {
            "description": "Suppression ID",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          }
        },
        "description": "Creates a suppression rule for the specified policy.\n\nYou can apply a suppression rule at various levels, such as \n\n\n* An entire policy\n* A specific source. Example of sources are an AWS account, Google Cloud project, and an Azure subscription. \n* A specific resource \n* A tag \n\n\nThe request body parameters depend on the level you choose.\n\nThe request body parameters depend on the type of suppression rule you are updating.\n\n\n* **ResourcesSuppressionCreate** for Resources \n* **AccountsSuppressionCreate** for Accounts \n* **PolicySupression** for Policy \n* **TagsSuppressionCreate** for Tags\n\n\nYou can use [List Repositories](/api/cloud/cspm/code-security#operation/getRepositories) \nto get valid values for the following parameters:\n\n\n* **ResourcesSuppressionCreate.resources[].id**\n* **ResourcesSuppressionCreate.resources[].accountId**\n",
        "summary": "Create Suppression Rule",
        "tags": ["Suppressions"],
        "security": [{ "CustomAuthorizer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "policyId",
            "description": "Policy ID",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SuppressionCreate" },
              "examples": {
                "Example 1": {
                  "value": {
                    "expirationTime": 1834303033687,
                    "origin": "Platform",
                    "suppressionType": "Policy",
                    "comment": "Policy is irrelevant."
                  }
                },
                "Example 2": {
                  "value": {
                    "expirationTime": 1834303033687,
                    "origin": "Platform",
                    "suppressionType": "Tags",
                    "comment": "Ignored.",
                    "tags": [{ "value": "knights", "key": "team" }]
                  }
                },
                "Example 3": {
                  "value": {
                    "expirationTime": 1834303033687,
                    "origin": "Platform",
                    "suppressionType": "Accounts",
                    "comment": "No justification comment provided.",
                    "accountIds": ["bridgecrewio/terragoat"]
                  }
                },
                "Example 4": {
                  "value": {
                    "expirationTime": 1834303033687,
                    "origin": "Platform",
                    "suppressionType": "Resources",
                    "comment": "Dev env resources.",
                    "resources": [
                      {
                        "accountId": "bridgecrewio/terragoat",
                        "id": "/terraform/aws/db-app.tf:aws_instance.db_app"
                      },
                      {
                        "accountId": "bridgecrewio/terragoat",
                        "id": "/terraform/aws/ec2.tf:aws_instance.web_host"
                      },
                      {
                        "accountId": "bridgecrew/gitlab_terragoat",
                        "id": "/terraform/aws/db-app.tf:aws_instance.db_app"
                      },
                      {
                        "accountId": "bridgecrew/gitlab_terragoat",
                        "id": "/terraform/aws/ec2.tf:aws_instance.web_host"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/suppressions/{policyId}\"\n\npayload = {\n    \"comment\": \"string\",\n    \"origin\": \"string\",\n    \"expirationTime\": 0,\n    \"suppressionType\": \"Resources\",\n    \"resources\": [\n        {\n            \"id\": \"string\",\n            \"accountId\": \"string\"\n        }\n    ]\n}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.prismacloud.io/code/api/v1/suppressions/{policyId} \\\n  --header 'authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"comment\":\"string\",\"origin\":\"string\",\"expirationTime\":0,\"suppressionType\":\"Resources\",\"resources\":[{\"id\":\"string\",\"accountId\":\"string\"}]}'"
          }
        ]
      }
    },
    "/code/api/v1/suppressions/{policyId}/justifications/{suppressionId}": {
      "put": {
        "operationId": "updateSuppression",
        "responses": {
          "200": {
            "description": "Suppression ID",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          },
          "400": {
            "description": "Could not update suppression for given suppression ID"
          }
        },
        "description": "Update an existing Bridgecrew Suppression rule for a given policy ID and suppression ID.\n\nThe request body parameters depend on the type of suppression rule you are updating.\n\n* **ResourcesSuppressionCreate** for Resources\n* **AccountsSuppressionCreate** for Accounts\n* **PolicySupression** for Policy\n* **TagsSuppressionCreate** for Tags\n\nThe request samples include example JSON to update a suppression rules.\n",
        "summary": "Update Suppression Rule",
        "tags": ["Suppressions"],
        "security": [{ "CustomAuthorizer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "path",
            "name": "suppressionId",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SuppressionCreate" },
              "examples": {
                "Example 1": {
                  "value": {
                    "expirationTime": 1834303033687,
                    "origin": "Platform",
                    "suppressionType": "Policy",
                    "comment": "Policy is irrelevant."
                  }
                },
                "Example 2": {
                  "value": {
                    "expirationTime": 1834303033687,
                    "origin": "Platform",
                    "suppressionType": "Tags",
                    "comment": "Ignored.",
                    "tags": [{ "value": "knights", "key": "team" }]
                  }
                },
                "Example 3": {
                  "value": {
                    "expirationTime": 1834303033687,
                    "origin": "Platform",
                    "suppressionType": "Accounts",
                    "comment": "No justification comment provided.",
                    "accountIds": ["bridgecrewio/terragoat"]
                  }
                },
                "Example 4": {
                  "value": {
                    "expirationTime": 1834303033687,
                    "origin": "Platform",
                    "suppressionType": "Resources",
                    "comment": "Dev env resources.",
                    "resources": [
                      {
                        "accountId": "bridgecrewio/terragoat",
                        "id": "/terraform/aws/db-app.tf:aws_instance.db_app"
                      },
                      {
                        "accountId": "bridgecrewio/terragoat",
                        "id": "/terraform/aws/ec2.tf:aws_instance.web_host"
                      },
                      {
                        "accountId": "bridgecrew/gitlab_terragoat",
                        "id": "/terraform/aws/db-app.tf:aws_instance.db_app"
                      },
                      {
                        "accountId": "bridgecrew/gitlab_terragoat",
                        "id": "/terraform/aws/ec2.tf:aws_instance.web_host"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/suppressions/{policyId}/justifications/{suppressionId}\"\n\npayload = {\n    \"comment\": \"string\",\n    \"origin\": \"string\",\n    \"expirationTime\": 0,\n    \"suppressionType\": \"Resources\",\n    \"resources\": [\n        {\n            \"id\": \"string\",\n            \"accountId\": \"string\"\n        }\n    ]\n}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"PUT\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url https://api.prismacloud.io/code/api/v1/suppressions/{policyId}/justifications/{suppressionId} \\\n  --header 'authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"comment\":\"string\",\"origin\":\"string\",\"expirationTime\":0,\"suppressionType\":\"Resources\",\"resources\":[{\"id\":\"string\",\"accountId\":\"string\"}]}'"
          }
        ]
      },
      "delete": {
        "operationId": "deleteSuppression",
        "responses": {
          "200": { "description": "Suppression ID" },
          "400": { "description": "Failed to delete suppression rule" }
        },
        "description": "Deletes the existing Code Security suppression rule with the specified policy ID  and suppression ID.",
        "summary": "Delete Suppression Rule",
        "tags": ["Suppressions"],
        "security": [{ "CustomAuthorizer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "description": "Policy ID",
            "schema": { "type": "string" }
          },
          {
            "in": "path",
            "name": "suppressionId",
            "required": true,
            "description": "Suppression ID",
            "schema": { "type": "string" }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/suppressions/{policyId}/justifications/{suppressionId}\"\n\nheaders = {\"authorization\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"DELETE\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request DELETE \\\n  --url https://api.prismacloud.io/code/api/v1/suppressions/{policyId}/justifications/{suppressionId} \\\n  --header 'authorization: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/code/api/v1/suppressions/{policyId}/justifications": {
      "get": {
        "operationId": "getSuppressionsJustifications",
        "responses": {
          "200": {
            "description": "Suppression justification data returned",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SuppressionsJustifications"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": { "description": "Request failed" }
        },
        "description": "Returns details about Code Security Suppressions that have been set for the given policy ID and accounts.",
        "summary": "List Suppressions Justifications",
        "tags": ["Suppressions"],
        "security": [{ "CustomAuthorizer": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "policyId",
            "required": true,
            "description": "Policy ID",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "accounts",
            "required": true,
            "description": "Array of account IDs",
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/suppressions/{policyId}/justifications\"\n\nquerystring = {\"accounts\":\"SOME_ARRAY_VALUE\"}\n\nheaders = {\"authorization\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://api.prismacloud.io/code/api/v1/suppressions/{policyId}/justifications?accounts=SOME_ARRAY_VALUE' \\\n  --header 'authorization: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/code/api/v1/errors/files": {
      "post": {
        "operationId": "getErrorsFiles",
        "responses": {
          "200": {
            "description": "Get errors files",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetErrorsFilesResponseBody"
                }
              }
            }
          }
        },
        "description": "Returns a list of scanned files that meet the criteria in the request body parameters and\nprovides error counts for each file.\n",
        "summary": "List Scanned Files With Error Counts",
        "tags": ["CodeErrors"],
        "security": [{ "CustomAuthorizer": [] }],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GetErrorsFilters" }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/errors/files\"\n\npayload = {\n    \"repository\": \"string\",\n    \"branch\": \"string\",\n    \"sourceTypes\": [\"Github\"],\n    \"severities\": [\"CRITICAL\"],\n    \"tags\": [\n        {\n            \"value\": \"string\",\n            \"key\": \"string\"\n        }\n    ],\n    \"CICDRunId\": 0,\n    \"categories\": [\"IAM\"],\n    \"types\": [\"Errors\"],\n    \"search\": {\n        \"text\": \"string\",\n        \"options\": [\"path\"],\n        \"title\": \"title\"\n    },\n    \"authors\": [\"string\"],\n    \"codeStatus\": [\"hasFix\"]\n}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.prismacloud.io/code/api/v1/errors/files \\\n  --header 'authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"repository\":\"string\",\"branch\":\"string\",\"sourceTypes\":[\"Github\"],\"severities\":[\"CRITICAL\"],\"tags\":[{\"value\":\"string\",\"key\":\"string\"}],\"CICDRunId\":0,\"categories\":[\"IAM\"],\"types\":[\"Errors\"],\"search\":{\"text\":\"string\",\"options\":[\"path\"],\"title\":\"title\"},\"authors\":[\"string\"],\"codeStatus\":[\"hasFix\"]}'"
          }
        ]
      }
    },
    "/code/api/v1/errors/file": {
      "post": {
        "operationId": "getErrorsInFile",
        "responses": {
          "200": {
            "description": "Get File Errors",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorsInFileWithPaginationResponse"
                }
              }
            }
          }
        },
        "description": "Returns a list of potential Code Security policy violations and fixes for the specified file path.\n",
        "summary": "List File Errors",
        "tags": ["CodeErrors"],
        "security": [{ "CustomAuthorizer": [] }],
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Maximum number of data items to return",
            "schema": { "format": "double", "type": "number" }
          },
          {
            "in": "query",
            "name": "offset",
            "required": false,
            "description": "Position of first returned data item relative to all available data items",
            "schema": { "format": "double", "type": "number" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetErrorsInFileWithFilters"
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/errors/file\"\n\nquerystring = {\"limit\":\"SOME_NUMBER_VALUE\",\"offset\":\"SOME_NUMBER_VALUE\"}\n\npayload = {\n    \"repository\": \"string\",\n    \"branch\": \"string\",\n    \"sourceTypes\": [\"Github\"],\n    \"severities\": [\"CRITICAL\"],\n    \"tags\": [\n        {\n            \"value\": \"string\",\n            \"key\": \"string\"\n        }\n    ],\n    \"CICDRunId\": 0,\n    \"categories\": [\"IAM\"],\n    \"types\": [\"Errors\"],\n    \"search\": {\n        \"text\": \"string\",\n        \"options\": [\"path\"],\n        \"title\": \"title\"\n    },\n    \"authors\": [\"string\"],\n    \"codeStatus\": [\"hasFix\"],\n    \"filePath\": \"string\"\n}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url 'https://api.prismacloud.io/code/api/v1/errors/file?limit=SOME_NUMBER_VALUE&offset=SOME_NUMBER_VALUE' \\\n  --header 'authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"repository\":\"string\",\"branch\":\"string\",\"sourceTypes\":[\"Github\"],\"severities\":[\"CRITICAL\"],\"tags\":[{\"value\":\"string\",\"key\":\"string\"}],\"CICDRunId\":0,\"categories\":[\"IAM\"],\"types\":[\"Errors\"],\"search\":{\"text\":\"string\",\"options\":[\"path\"],\"title\":\"title\"},\"authors\":[\"string\"],\"codeStatus\":[\"hasFix\"],\"filePath\":\"string\"}'"
          }
        ]
      }
    },
    "/code/api/v1/errors/gitBlameAuthors": {
      "get": {
        "operationId": "getGitBlameAuthors",
        "responses": {
          "200": {
            "description": "Array of code author names",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "description": "Returns a list whose items include:\n\n\n* The author who last updated a modified line in a file\n\n* The code revision for the modification\n\n\n This data is sometimes known as the git-blame authors.\n",
        "summary": "List Last Authors",
        "tags": ["CodeErrors"],
        "security": [{ "CustomAuthorizer": [] }],
        "parameters": [],
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/errors/gitBlameAuthors\"\n\nheaders = {\"authorization\": \"REPLACE_KEY_VALUE\"}\n\nresponse = requests.request(\"GET\", url, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/code/api/v1/errors/gitBlameAuthors \\\n  --header 'authorization: REPLACE_KEY_VALUE'"
          }
        ]
      }
    },
    "/code/api/v1/errors/submitActions": {
      "post": {
        "operationId": "submitActions",
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitActionsResponse"
                }
              }
            }
          }
        },
        "description": "Fixes or suppresses Code Security policy violations. You can use request parameters \nto specify which violations to fix and which to suppress.\n\n\nThe request samples include examples of parameters for requests to fix violations \nand requests to suppress violations.\n",
        "summary": "Fix or Suppress Scan Results",
        "tags": ["CodeErrors"],
        "security": [{ "CustomAuthorizer": [] }],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SubmitActionsRequest" },
              "examples": {
                "Example 1": {
                  "value": {
                    "type": "pr",
                    "metadata": {
                      "owner": "orevron",
                      "runNumber": 5,
                      "repoName": "terragoat",
                      "pr": "218",
                      "sourceBranchName": "test15"
                    },
                    "violationsToFix": [],
                    "violationsToSuppress": [
                      {
                        "resourceId": "/terraform/s3.tf:aws_s3_bucket.operations",
                        "violationId": "BC_AWS_S3_14",
                        "CICDRunId": 5,
                        "justificationId": null,
                        "status": "OPEN",
                        "frameworkType": "Terraform",
                        "repository": "orevron/terragoat",
                        "s3FilePath": "checkov/orevron1/orevron/terragoat/pr/218/2b2800b8232debe12d33aad62478e822e884fbda/diff/src/terraform/s3.tf",
                        "s3FixFilePath": "checkov/orevron1/orevron/terragoat/pr/218/2b2800b8232debe12d33aad62478e822e884fbda/diff/fixes/BC_AWS_S3_14/aws_s3_bucket.operations/terraform/s3.tf",
                        "metadataLines": [41, 57],
                        "metadataChecksMetadataPath": "checkov/orevron1/orevron/terragoat/pr/218/2b2800b8232debe12d33aad62478e822e884fbda/diff/checkov_results/terraform/checks_metadata.json",
                        "creationDate": "2021-07-07T12:10:28.996Z",
                        "updatedDate": "2021-07-07T12:10:28.996Z",
                        "commentIds": ["665310693"],
                        "vcsCommentLine": null,
                        "errorLines": [],
                        "severity": "HIGH",
                        "justification": {
                          "comment": "this is comment",
                          "createdBy": "or.evron@paloaltonetworks.com"
                        },
                        "bulkSuppression": true,
                        "runtimeId": null,
                        "runtimeSourceId": null
                      }
                    ]
                  }
                },
                "Example 2": {
                  "value": {
                    "type": "default",
                    "violationsToFix": [
                      {
                        "metadataChecksMetadataPath": "checkov/milkanast/milkanas/terragoat/master/checkov_results/terraform/checks_metadata.json",
                        "metadataLines": [1, 13],
                        "violationId": "BC_AWS_S3_14",
                        "resourceId": "/terraform/aws/s3.tf:aws_s3_bucket.data",
                        "frameworkType": "Terraform",
                        "s3FilePath": "checkov/milkanast/milkanas/terragoat/master/src/terraform/aws/s3.tf",
                        "owner": "milkanas",
                        "repoName": "terragoat",
                        "fullId": "BC_AWS_S3_14::milkanas/terragoat::/terraform/aws/s3.tf:aws_s3_bucket.data",
                        "runtimeId": null,
                        "runtimeSourceId": null,
                        "fixedCode": ""
                      }
                    ],
                    "violationsToSuppress": [
                      {
                        "violationId": "BC_AWS_S3_13",
                        "suppressionType": "Resources",
                        "comment": "this is justification comment",
                        "resources": [
                          {
                            "id": "BC_GIT_6::orevron/terragoat::/terraform/providers.tf:4ec71f2183bf24b28320d0c2839bdd08c255f0bb",
                            "accountId": "orevron/terragoat"
                          },
                          {
                            "id": "BC_GIT_6::orevron/terragoat::/terraform/lambda.tf:ca61f30c56f9b66c8802632d559a391acd02d01d",
                            "accountId": "orevron/terragoat"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/errors/submitActions\"\n\npayload = {\n    \"type\": \"default\",\n    \"metadata\": {\n        \"owner\": \"string\",\n        \"repoName\": \"string\",\n        \"pr\": \"string\",\n        \"runNumber\": 0,\n        \"sourceBranchName\": \"string\"\n    },\n    \"violationsToFix\": [\n        {\n            \"metadataChecksMetadataPath\": \"string\",\n            \"metadataLines\": [0],\n            \"violationId\": \"string\",\n            \"resourceId\": \"string\",\n            \"frameworkType\": \"string\",\n            \"s3FilePath\": \"string\",\n            \"CICDRunId\": 0,\n            \"justificationId\": \"string\",\n            \"status\": \"string\",\n            \"repository\": \"string\",\n            \"s3FixFilePath\": \"string\",\n            \"creationDate\": \"string\",\n            \"updatedDate\": \"string\",\n            \"commentIds\": [\"string\"],\n            \"vcsCommentLine\": \"string\",\n            \"errorLines\": [0],\n            \"severity\": \"string\",\n            \"justification\": {\n                \"comment\": \"string\",\n                \"createdBy\": \"string\",\n                \"expirationTime\": 0\n            },\n            \"bulkSuppression\": True,\n            \"runtimeId\": \"string\",\n            \"runtimeSourceId\": \"string\"\n        }\n    ],\n    \"violationsToSuppress\": [\n        {\n            \"metadataChecksMetadataPath\": \"string\",\n            \"metadataLines\": [0],\n            \"violationId\": \"string\",\n            \"resourceId\": \"string\",\n            \"frameworkType\": \"string\",\n            \"s3FilePath\": \"string\",\n            \"CICDRunId\": 0,\n            \"justificationId\": \"string\",\n            \"status\": \"string\",\n            \"repository\": \"string\",\n            \"s3FixFilePath\": \"string\",\n            \"creationDate\": \"string\",\n            \"updatedDate\": \"string\",\n            \"commentIds\": [\"string\"],\n            \"vcsCommentLine\": \"string\",\n            \"errorLines\": [0],\n            \"severity\": \"string\",\n            \"justification\": {\n                \"comment\": \"string\",\n                \"createdBy\": \"string\",\n                \"expirationTime\": 0\n            },\n            \"bulkSuppression\": True,\n            \"runtimeId\": \"string\",\n            \"runtimeSourceId\": \"string\"\n        }\n    ]\n}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.prismacloud.io/code/api/v1/errors/submitActions \\\n  --header 'authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"type\":\"default\",\"metadata\":{\"owner\":\"string\",\"repoName\":\"string\",\"pr\":\"string\",\"runNumber\":0,\"sourceBranchName\":\"string\"},\"violationsToFix\":[{\"metadataChecksMetadataPath\":\"string\",\"metadataLines\":[0],\"violationId\":\"string\",\"resourceId\":\"string\",\"frameworkType\":\"string\",\"s3FilePath\":\"string\",\"CICDRunId\":0,\"justificationId\":\"string\",\"status\":\"string\",\"repository\":\"string\",\"s3FixFilePath\":\"string\",\"creationDate\":\"string\",\"updatedDate\":\"string\",\"commentIds\":[\"string\"],\"vcsCommentLine\":\"string\",\"errorLines\":[0],\"severity\":\"string\",\"justification\":{\"comment\":\"string\",\"createdBy\":\"string\",\"expirationTime\":0},\"bulkSuppression\":true,\"runtimeId\":\"string\",\"runtimeSourceId\":\"string\"}],\"violationsToSuppress\":[{\"metadataChecksMetadataPath\":\"string\",\"metadataLines\":[0],\"violationId\":\"string\",\"resourceId\":\"string\",\"frameworkType\":\"string\",\"s3FilePath\":\"string\",\"CICDRunId\":0,\"justificationId\":\"string\",\"status\":\"string\",\"repository\":\"string\",\"s3FixFilePath\":\"string\",\"creationDate\":\"string\",\"updatedDate\":\"string\",\"commentIds\":[\"string\"],\"vcsCommentLine\":\"string\",\"errorLines\":[0],\"severity\":\"string\",\"justification\":{\"comment\":\"string\",\"createdBy\":\"string\",\"expirationTime\":0},\"bulkSuppression\":true,\"runtimeId\":\"string\",\"runtimeSourceId\":\"string\"}]}'"
          }
        ]
      }
    },
    "/code/api/v1/errors/getFixedCode": {
      "post": {
        "operationId": "getFixedCode",
        "responses": {
          "200": {
            "description": "string representing a fixed resource code",
            "content": { "application/json": { "schema": {} } }
          }
        },
        "description": "Returns the remediated resource code that fulfills the specified criteria.\n\n\nYou can get use [List File Errors](/api/cloud/cspm/code-security#operation/getErrorsInFile) \nto obtain the request body parameter data for your resource.\n",
        "summary": "Get Fixed Resource Code",
        "tags": ["CodeErrors"],
        "security": [{ "CustomAuthorizer": [] }],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "error": {
                    "$ref": "#/components/schemas/DefaultBranchViolationToFix"
                  }
                },
                "required": ["error"],
                "type": "object"
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/errors/getFixedCode\"\n\npayload = {\"error\": {\n        \"metadataChecksMetadataPath\": \"string\",\n        \"metadataLines\": [0],\n        \"violationId\": \"string\",\n        \"resourceId\": \"string\",\n        \"frameworkType\": \"string\",\n        \"s3FilePath\": \"string\",\n        \"owner\": \"string\",\n        \"repoName\": \"string\",\n        \"fullId\": \"string\",\n        \"fixPath\": \"string\",\n        \"errorLines\": [0],\n        \"runtimeId\": \"string\",\n        \"runtimeSourceId\": \"string\",\n        \"fixedCode\": \"string\",\n        \"selectedFix\": \"string\",\n        \"inspectedKey\": \"string\",\n        \"fixes\": [\n            {\n                \"id\": \"string\",\n                \"code\": \"string\",\n                \"times\": 0,\n                \"percent\": 0,\n                \"inspectedKey\": \"string\",\n                \"fixedCode\": \"string\"\n            }\n        ],\n        \"resourceCode\": \"string\"\n    }}\nheaders = {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.prismacloud.io/code/api/v1/errors/getFixedCode \\\n  --header 'authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"error\":{\"metadataChecksMetadataPath\":\"string\",\"metadataLines\":[0],\"violationId\":\"string\",\"resourceId\":\"string\",\"frameworkType\":\"string\",\"s3FilePath\":\"string\",\"owner\":\"string\",\"repoName\":\"string\",\"fullId\":\"string\",\"fixPath\":\"string\",\"errorLines\":[0],\"runtimeId\":\"string\",\"runtimeSourceId\":\"string\",\"fixedCode\":\"string\",\"selectedFix\":\"string\",\"inspectedKey\":\"string\",\"fixes\":[{\"id\":\"string\",\"code\":\"string\",\"times\":0,\"percent\":0,\"inspectedKey\":\"string\",\"fixedCode\":\"string\"}],\"resourceCode\":\"string\"}}'"
          }
        ]
      }
    },
    "/code/api/v1/fixes/checkov": {
      "post": {
        "operationId": "fixCheckovErrors",
        "responses": {
          "200": {
            "description": "Fixes for checkov errors",
            "content": {
              "application/json": {
                "schema": {
                  "items": { "$ref": "#/components/schemas/FileFixes" },
                  "type": "array"
                },
                "examples": {
                  "Example 1": {
                    "value": [
                      {
                        "filePath": "/aws/ec2.tf",
                        "fixes": [
                          {
                            "resourceId": "aws_ebs_volume.web_host_storage",
                            "policyId": "BC_AWS_GENERAL_3",
                            "originalStartLine": 25,
                            "originalEndLine": 33,
                            "fixedDefinition": "resource \"aws_ebs_volume\" \"web_host_storage\" {\n  # unencrypted volume\n  availability_zone = \"${var.availability_zone}\"\n  #encrypted         = false  # Setting this causes the volume to be recreated on apply \n  size = 1\n  tags = {\n    Name = \"${local.resource_prefix.value}-ebs\"\n  }\n  encrypted = true\n}\n"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "description": "Returns a list of suggested fixes for policy violations that Code Security has identified.",
        "summary": "Get Code Error Fixes",
        "tags": ["CodeFixes"],
        "security": [{ "CustomAuthorizer": [] }],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "items": { "$ref": "#/components/schemas/CheckovFileErrors" },
                "type": "array"
              }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/code/api/v1/fixes/checkov\"\n\npayload = [\n    {\n        \"filePath\": \"string\",\n        \"fileContent\": \"string\",\n        \"framework\": \"string\",\n        \"errors\": [\n            {\n                \"endLine\": 0,\n                \"startLine\": 0,\n                \"policyId\": \"string\",\n                \"resourceId\": \"string\"\n            }\n        ]\n    }\n]\nheaders = {\n    \"content-type\": \"application/json\",\n    \"authorization\": \"REPLACE_KEY_VALUE\"\n}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.prismacloud.io/code/api/v1/fixes/checkov \\\n  --header 'authorization: REPLACE_KEY_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '[{\"filePath\":\"string\",\"fileContent\":\"string\",\"framework\":\"string\",\"errors\":[{\"endLine\":0,\"startLine\":0,\"policyId\":\"string\",\"resourceId\":\"string\"}]}]'"
          }
        ]
      }
    }
  },
  "servers": [{ "url": "https://api.prismacloud.io" }],
  "tags": [
    {
      "name": "Repositories",
      "description": "The following API endpoints enable you to access data about the repositories you've added to Prisma Cloud Code Security."
    },
    {
      "name": "Scans",
      "description": "The API endpoints in this section manage Code Security scans."
    },
    {
      "name": "Suppressions",
      "description": "The following API endpoints manage Code Security suppression rules."
    },
    {
      "name": "CodeErrors",
      "description": "The following API endpoints manage Code Security build policy violations."
    },
    {
      "name": "CodeFixes",
      "description": "The following API endpoints manage Code Security fixes."
    }
  ]
}
