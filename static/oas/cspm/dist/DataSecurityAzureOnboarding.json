{
  "openapi": "3.0.3",
  "info": {
    "title": "Data Security Azure Onboarding API Overview",
    "version": "Latest"
  },
  "servers": [{ "url": "https://api.prismacloud.io" }],
  "paths": {
    "/config/v3/account/storageUUID/{id}": {
      "get": {
        "summary": "Fetch Account Config By Storage UUID",
        "description": "Returns the account config details for the specified storage UUID",
        "operationId": "getAccountConfigByStorageUUID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": { "application/json": {} }
          },
          "400": { "description": "bad_request" },
          "500": { "description": "internal_error" }
        },
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/config/v3/account/storageUUID/{id}\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/config/v3/account/storageUUID/{id}"
          }
        ]
      }
    },
    "/config/v3/account/{id}": {
      "get": {
        "summary": "Fetch Account Config By PCDS Account ID",
        "description": "Returns the account config details for the specified PCDS Account ID. If 'initialize' parameter is set to 'true', then the account will be pre-initialized for the Azure subscription.",
        "operationId": "getAccountConfigByAccountID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "initialize",
            "in": "query",
            "schema": { "default": false, "type": "boolean" }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": { "application/json": {} }
          },
          "400": { "description": "bad_request" },
          "500": { "description": "internal_error" }
        },
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/config/v3/account/{id}\"\n\nquerystring = {\"initialize\":\"SOME_BOOLEAN_VALUE\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://api.prismacloud.io/config/v3/account/{id}?initialize=SOME_BOOLEAN_VALUE'"
          }
        ]
      },
      "put": {
        "summary": "Update the account config for the specified PCDS Account ID",
        "description": "Updates the specified account config and returns the updated account config.",
        "operationId": "updateAccountConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AccountConfig" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": { "application/json": {} }
          },
          "400": { "description": "bad_request" },
          "401": { "description": "unauthenticated_access" },
          "403": { "description": "unauthorized_access" },
          "500": { "description": "internal_error" }
        },
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/config/v3/account/{id}\"\n\npayload = {\n    \"redlockAccountId\": 0,\n    \"accountId\": \"string\",\n    \"storageUUID\": \"386118f2-854b-4cff-b247-36e2caa8f09c\",\n    \"cloudType\": \"aws\",\n    \"accountType\": \"regular\",\n    \"redlockTenantId\": 0,\n    \"storageScanStatus\": \"initialized\",\n    \"dssTenantId\": \"string\",\n    \"accountName\": \"string\",\n    \"scanOption\": \"none\",\n    \"excludeRlp\": {\n        \"tenantId\": \"string\",\n        \"redlockAccountId\": 0,\n        \"excludeRlpOrgMembers\": [\n            {\n                \"accountNum\": \"string\",\n                \"accountName\": \"string\",\n                \"redlockAccountId\": 0\n            }\n        ]\n    },\n    \"cloudConfig\": {}\n}\nheaders = {\"content-type\": \"application/json\"}\n\nresponse = requests.request(\"PUT\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url https://api.prismacloud.io/config/v3/account/{id} \\\n  --header 'content-type: application/json' \\\n  --data '{\"redlockAccountId\":0,\"accountId\":\"string\",\"storageUUID\":\"386118f2-854b-4cff-b247-36e2caa8f09c\",\"cloudType\":\"aws\",\"accountType\":\"regular\",\"redlockTenantId\":0,\"storageScanStatus\":\"initialized\",\"dssTenantId\":\"string\",\"accountName\":\"string\",\"scanOption\":\"none\",\"excludeRlp\":{\"tenantId\":\"string\",\"redlockAccountId\":0,\"excludeRlpOrgMembers\":[{\"accountNum\":\"string\",\"accountName\":\"string\",\"redlockAccountId\":0}]},\"cloudConfig\":{}}'"
          }
        ]
      }
    },
    "/config/v3/account/{id}/status": {
      "get": {
        "summary": "Performs a Permissions Check for the Given PCDS Account",
        "description": "Returns details pertaining to the rudimentary permissions check - contains details pertaining to any missing permissions.",
        "operationId": "getStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          }
        },
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/config/v3/account/{id}/status\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/config/v3/account/{id}/status"
          }
        ]
      }
    },
    "/config/v3/account/{subscriptionId}/acl-script": {
      "get": {
        "summary": "Generate an Azure Terraform Script",
        "description": "Returns an Azure Network ACL script for the given Azure Subscription ID and PCDS Tenant ID that should fix all network connectivity issues.",
        "operationId": "generateNetworkAclScriptByAccountID",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": { "application/octet-stream": {} }
          },
          "500": { "description": "internal_error" }
        },
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/config/v3/account/{subscriptionId}/acl-script\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/config/v3/account/{subscriptionId}/acl-script"
          }
        ]
      }
    },
    "/config/v3/estimated-credits": {
      "post": {
        "summary": "Perform a Credit Estimation For The Specified Resources.",
        "description": "Returns the total data volume size of all the requested resources and equivalent credits of data volume.",
        "operationId": "getCreditEstimation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditEstimationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": { "application/json": {} }
          },
          "400": { "description": "bad_request" },
          "403": { "description": "unauthorized_access" },
          "500": { "description": "internal_error" }
        },
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/config/v3/estimated-credits\"\n\npayload = {\n    \"scanOption\": \"exposure_only\",\n    \"scanType\": \"not_selected\",\n    \"resources\": [\n        {\n            \"resourceName\": \"string\",\n            \"resourceGroup\": \"string\",\n            \"accountId\": \"string\",\n            \"cloudType\": \"aws\"\n        }\n    ]\n}\nheaders = {\"content-type\": \"application/json\"}\n\nresponse = requests.request(\"POST\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request POST \\\n  --url https://api.prismacloud.io/config/v3/estimated-credits \\\n  --header 'content-type: application/json' \\\n  --data '{\"scanOption\":\"exposure_only\",\"scanType\":\"not_selected\",\"resources\":[{\"resourceName\":\"string\",\"resourceGroup\":\"string\",\"accountId\":\"string\",\"cloudType\":\"aws\"}]}'"
          }
        ]
      }
    },
    "/config/v3/resource/configure": {
      "put": {
        "summary": "Update the Resources Scan Config",
        "description": "Returns the resource scan configs for those that have been updated.",
        "operationId": "configureResources",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResourcesConfigRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": { "application/json": {} }
          },
          "204": { "description": "no_content" },
          "400": { "description": "bad_request" },
          "403": { "description": "unauthorized_access" },
          "500": { "description": "internal_error" }
        },
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/config/v3/resource/configure\"\n\npayload = {\n    \"enableScanning\": True,\n    \"scanType\": \"not_selected\",\n    \"scanOption\": \"exposure_only\",\n    \"resources\": [\n        {\n            \"resourceName\": \"string\",\n            \"resourceGroup\": \"string\",\n            \"accountId\": \"string\",\n            \"cloudType\": \"aws\"\n        }\n    ]\n}\nheaders = {\"content-type\": \"application/json\"}\n\nresponse = requests.request(\"PUT\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url https://api.prismacloud.io/config/v3/resource/configure \\\n  --header 'content-type: application/json' \\\n  --data '{\"enableScanning\":true,\"scanType\":\"not_selected\",\"scanOption\":\"exposure_only\",\"resources\":[{\"resourceName\":\"string\",\"resourceGroup\":\"string\",\"accountId\":\"string\",\"cloudType\":\"aws\"}]}'"
          }
        ]
      }
    },
    "/config/v3/resources": {
      "get": {
        "summary": "Fetch All Resources For The Given PCDS Tenant",
        "description": "Returns details for all resources tied to the PCDS Tenant which is extracted from the access token.",
        "operationId": "getResources",
        "responses": {
          "200": {
            "description": "success",
            "content": { "application/json": {} }
          },
          "400": { "description": "bad_request" },
          "403": { "description": "unauthorized_access" },
          "500": { "description": "internal_error" }
        },
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/config/v3/resources\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/config/v3/resources"
          }
        ]
      }
    },
    "/config/v3/tenant/acl-script": {
      "get": {
        "summary": "Generate an Azure Terraform Script for all Azure accounts under the specified PCDS Tenant.",
        "description": "Returns an Azure Network ACL script for all accounts under the given PCDS Tenant ID that should fix all network connectivity issues.",
        "operationId": "generateNetworkAclScriptByTenantID",
        "responses": {
          "200": {
            "description": "success",
            "content": { "application/octet-stream": {} }
          },
          "500": { "description": "internal_error" }
        },
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/config/v3/tenant/acl-script\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/config/v3/tenant/acl-script"
          }
        ]
      }
    },
    "/config/v3/tenant/config": {
      "get": {
        "summary": "Fetch The Tenant Config For The Given PCDS Tenant",
        "description": "Returns tenant config details for the specified PCDS Tenant which is extracted from the access token.",
        "operationId": "getTenantConfig",
        "parameters": [
          {
            "name": "tenantId",
            "in": "query",
            "schema": { "default": "", "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": { "application/json": {} }
          },
          "400": { "description": "bad_request" },
          "500": { "description": "internal_error" }
        },
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/config/v3/tenant/config\"\n\nquerystring = {\"tenantId\":\"SOME_STRING_VALUE\"}\n\nresponse = requests.request(\"GET\", url, params=querystring)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url 'https://api.prismacloud.io/config/v3/tenant/config?tenantId=SOME_STRING_VALUE'"
          }
        ]
      }
    },
    "/config/v3/tenant/resource/sizing/configure": {
      "put": {
        "summary": "Update the PCDS Tenant Resource Report Frequency",
        "description": "Update the size reporting frequency at global for all tenant resources.",
        "operationId": "updateReportFrequency",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TenantResourcesReportFrequency"
              }
            }
          }
        },
        "responses": {
          "204": { "description": "no_content" },
          "400": { "description": "bad_request" },
          "401": { "description": "unauthenticated_access" },
          "403": { "description": "unauthorized_access" },
          "500": { "description": "internal_error" }
        },
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/config/v3/tenant/resource/sizing/configure\"\n\npayload = {\"sizeReportingFrequency\": \"None\"}\nheaders = {\"content-type\": \"application/json\"}\n\nresponse = requests.request(\"PUT\", url, json=payload, headers=headers)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request PUT \\\n  --url https://api.prismacloud.io/config/v3/tenant/resource/sizing/configure \\\n  --header 'content-type: application/json' \\\n  --data '{\"sizeReportingFrequency\":\"None\"}'"
          }
        ]
      }
    },
    "/config/v3/tenant/{tenantId}/{subscriptionId}/terraform-script": {
      "get": {
        "summary": "Generate an Azure Terraform Script",
        "description": "Returns an Azure Terraform Script for the given Azure Subscription ID and PCDS Tenant ID that comes with all necessary permissions.",
        "operationId": "getTerraformScript",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "tenantId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": { "application/octet-stream": {} }
          },
          "400": { "description": "bad_request" },
          "500": { "description": "internal_error" }
        },
        "x-codeSamples": [
          {
            "lang": "Python + Requests",
            "source": "import requests\n\nurl = \"https://api.prismacloud.io/config/v3/tenant/{tenantId}/{subscriptionId}/terraform-script\"\n\nresponse = requests.request(\"GET\", url)\n\nprint(response.text)"
          },
          {
            "lang": "Shell + Curl",
            "source": "curl --request GET \\\n  --url https://api.prismacloud.io/config/v3/tenant/{tenantId}/{subscriptionId}/terraform-script"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AccountConfig": {
        "type": "object",
        "properties": {
          "redlockAccountId": { "format": "int32", "type": "integer" },
          "accountId": { "type": "string" },
          "storageUUID": { "$ref": "#/components/schemas/UUID" },
          "cloudType": { "$ref": "#/components/schemas/CloudType" },
          "accountType": { "$ref": "#/components/schemas/AccountType" },
          "redlockTenantId": { "format": "int64", "type": "integer" },
          "storageScanStatus": {
            "$ref": "#/components/schemas/StorageScanStatus"
          },
          "dssTenantId": { "type": "string" },
          "accountName": { "type": "string" },
          "scanOption": { "$ref": "#/components/schemas/AccountScanOption" },
          "excludeRlp": {
            "allOf": [
              { "$ref": "#/components/schemas/ExcludeRlp" },
              { "nullable": true }
            ]
          },
          "cloudConfig": { "$ref": "#/components/schemas/CspAccessConfig" }
        }
      },
      "AccountScanOption": {
        "enum": ["none", "realtime", "historical", "full", "custom"],
        "type": "string"
      },
      "AccountType": {
        "enum": ["regular", "organization", "tenant"],
        "type": "string"
      },
      "CloudType": { "enum": ["aws", "gcp", "azure"], "type": "string" },
      "CreditEstimationRequest": {
        "type": "object",
        "properties": {
          "scanOption": { "$ref": "#/components/schemas/ResourceScanOption" },
          "scanType": { "$ref": "#/components/schemas/ResourceScanType" },
          "resources": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ResourceInfo" }
          }
        }
      },
      "CspAccessConfig": { "type": "object" },
      "ExcludeRlp": {
        "type": "object",
        "properties": {
          "tenantId": { "type": "string" },
          "redlockAccountId": { "format": "int32", "type": "integer" },
          "excludeRlpOrgMembers": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ExcludeRlpOrgMember" },
            "nullable": true
          }
        }
      },
      "ExcludeRlpOrgMember": {
        "type": "object",
        "properties": {
          "accountNum": { "type": "string" },
          "accountName": { "type": "string" },
          "redlockAccountId": { "format": "int32", "type": "integer" }
        }
      },
      "ResourceInfo": {
        "type": "object",
        "properties": {
          "resourceName": { "type": "string" },
          "resourceGroup": { "type": "string" },
          "accountId": { "type": "string" },
          "cloudType": { "$ref": "#/components/schemas/CloudType" }
        }
      },
      "ResourceRetrievalFrequency": {
        "enum": ["None", "Daily", "Weekly"],
        "type": "string"
      },
      "ResourceScanOption": {
        "enum": ["exposure_only", "sensitive_in_publicly_exposed", "all"],
        "type": "string"
      },
      "ResourceScanType": {
        "enum": [
          "not_selected",
          "backwardForward",
          "forward",
          "na",
          "systemResources"
        ],
        "type": "string"
      },
      "ResourcesConfigRequest": {
        "type": "object",
        "properties": {
          "enableScanning": { "type": "boolean" },
          "scanType": {
            "enum": [
              "not_selected",
              "backwardForward",
              "forward",
              "na",
              "systemResources"
            ],
            "type": "string",
            "nullable": true
          },
          "scanOption": {
            "enum": ["exposure_only", "sensitive_in_publicly_exposed", "all"],
            "type": "string",
            "nullable": true
          },
          "resources": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ResourceInfo" }
          }
        }
      },
      "StorageScanStatus": {
        "enum": [
          "initialized",
          "enabled",
          "disabled",
          "maxcreditexceeded",
          "licenseexpired"
        ],
        "type": "string"
      },
      "TenantResourcesReportFrequency": {
        "type": "object",
        "properties": {
          "sizeReportingFrequency": {
            "$ref": "#/components/schemas/ResourceRetrievalFrequency"
          }
        }
      },
      "UUID": {
        "format": "uuid",
        "pattern": "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}",
        "type": "string"
      }
    }
  }
}
